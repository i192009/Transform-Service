// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.1
// source: AccountService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoginByTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginParam *LoginByTicketRequest_TicketLoginParam `protobuf:"bytes,1,opt,name=loginParam,proto3" json:"loginParam,omitempty"`
	AppId      string                                 `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId,omitempty"`
	Platform   string                                 `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	TenantId   string                                 `protobuf:"bytes,4,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *LoginByTicketRequest) Reset() {
	*x = LoginByTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccountService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginByTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByTicketRequest) ProtoMessage() {}

func (x *LoginByTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_AccountService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByTicketRequest.ProtoReflect.Descriptor instead.
func (*LoginByTicketRequest) Descriptor() ([]byte, []int) {
	return file_AccountService_proto_rawDescGZIP(), []int{0}
}

func (x *LoginByTicketRequest) GetLoginParam() *LoginByTicketRequest_TicketLoginParam {
	if x != nil {
		return x.LoginParam
	}
	return nil
}

func (x *LoginByTicketRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *LoginByTicketRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *LoginByTicketRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type UserLoginReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenId      string `protobuf:"bytes,1,opt,name=openId,proto3" json:"openId,omitempty"`
	Token       string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	IsFirstTime bool   `protobuf:"varint,3,opt,name=isFirstTime,proto3" json:"isFirstTime,omitempty"`
	Uid         string `protobuf:"bytes,5,opt,name=uid,proto3" json:"uid,omitempty"`
	// 第三方账户信息
	ThirdPartyInfo map[string]string `protobuf:"bytes,4,rep,name=thirdPartyInfo,proto3" json:"thirdPartyInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UserLoginReply) Reset() {
	*x = UserLoginReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccountService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginReply) ProtoMessage() {}

func (x *UserLoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_AccountService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginReply.ProtoReflect.Descriptor instead.
func (*UserLoginReply) Descriptor() ([]byte, []int) {
	return file_AccountService_proto_rawDescGZIP(), []int{1}
}

func (x *UserLoginReply) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *UserLoginReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserLoginReply) GetIsFirstTime() bool {
	if x != nil {
		return x.IsFirstTime
	}
	return false
}

func (x *UserLoginReply) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UserLoginReply) GetThirdPartyInfo() map[string]string {
	if x != nil {
		return x.ThirdPartyInfo
	}
	return nil
}

// 账号信息详情
type AccountInfoGDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                  `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`
	Uid           *string                `protobuf:"bytes,11,opt,name=uid,proto3,oneof" json:"uid,omitempty"`
	Account       string                 `protobuf:"bytes,12,opt,name=account,proto3" json:"account,omitempty"` // 账号名
	PhoneNumber   *string                `protobuf:"bytes,13,opt,name=phoneNumber,proto3,oneof" json:"phoneNumber,omitempty"`
	Email         *string                `protobuf:"bytes,14,opt,name=email,proto3,oneof" json:"email,omitempty"`
	Note          *string                `protobuf:"bytes,15,opt,name=note,proto3,oneof" json:"note,omitempty"`
	Status        int32                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`
	Questions     *string                `protobuf:"bytes,17,opt,name=questions,proto3,oneof" json:"questions,omitempty"`
	CreateTime    *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=createTime,proto3" json:"createTime,omitempty"`
	LoginTime     *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=loginTime,proto3,oneof" json:"loginTime,omitempty"`
	DeprecateTime *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=deprecateTime,proto3,oneof" json:"deprecateTime,omitempty"`
}

func (x *AccountInfoGDto) Reset() {
	*x = AccountInfoGDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccountService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountInfoGDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInfoGDto) ProtoMessage() {}

func (x *AccountInfoGDto) ProtoReflect() protoreflect.Message {
	mi := &file_AccountService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInfoGDto.ProtoReflect.Descriptor instead.
func (*AccountInfoGDto) Descriptor() ([]byte, []int) {
	return file_AccountService_proto_rawDescGZIP(), []int{2}
}

func (x *AccountInfoGDto) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountInfoGDto) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

func (x *AccountInfoGDto) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AccountInfoGDto) GetPhoneNumber() string {
	if x != nil && x.PhoneNumber != nil {
		return *x.PhoneNumber
	}
	return ""
}

func (x *AccountInfoGDto) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *AccountInfoGDto) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

func (x *AccountInfoGDto) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AccountInfoGDto) GetQuestions() string {
	if x != nil && x.Questions != nil {
		return *x.Questions
	}
	return ""
}

func (x *AccountInfoGDto) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *AccountInfoGDto) GetLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LoginTime
	}
	return nil
}

func (x *AccountInfoGDto) GetDeprecateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeprecateTime
	}
	return nil
}

type GetAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 获取信息类别
	// 0x0-不传入时的默认值,兼容旧接口仅返回uid字段。该值已被废弃,新增使用不应传入0x0
	// 0x1-uid，返回uid信息(位于accountInfo.uid字段)
	// 0x7FFFFFFF-返回全部信息,对应十进制为2147483647
	InfoSelector *int32 `protobuf:"varint,1,opt,name=infoSelector,proto3,oneof" json:"infoSelector,omitempty"`
	// 查询参数
	// 获取方式 1-手机号 2-邮箱 3-账号名
	// 因手机号/邮箱/账号名登录已融合，此参数可不传入，查询时param参数将在三个字段均搜索
	Type  int32  `protobuf:"varint,10,opt,name=type,proto3" json:"type,omitempty"`
	Param string `protobuf:"bytes,11,opt,name=param,proto3" json:"param,omitempty"` // 查询参数 与type对应，账号名/手机号/邮箱
}

func (x *GetAccountRequest) Reset() {
	*x = GetAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccountService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequest) ProtoMessage() {}

func (x *GetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_AccountService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return file_AccountService_proto_rawDescGZIP(), []int{3}
}

func (x *GetAccountRequest) GetInfoSelector() int32 {
	if x != nil && x.InfoSelector != nil {
		return *x.InfoSelector
	}
	return 0
}

func (x *GetAccountRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetAccountRequest) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

type C2S_GetOrCreateAccount_Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 获取信息类别
	// 0x1-uid，返回uid信息(位于accountInfo.uid字段)
	// 0x7FFFFFFF-返回全部信息,对应十进制为2147483647
	InfoSelector int32 `protobuf:"varint,1,opt,name=infoSelector,proto3" json:"infoSelector,omitempty"`
	// 查询参数
	// 获取方式 1-手机号 2-邮箱 3-账号名
	// 因手机号/邮箱/账号名登录已融合，此参数可不传入，查询时param参数将在三个字段均搜索
	Type  int32  `protobuf:"varint,10,opt,name=type,proto3" json:"type,omitempty"`
	Param string `protobuf:"bytes,11,opt,name=param,proto3" json:"param,omitempty"` // 查询参数 与type对应，账号名/手机号/邮箱
	// 后置动作
	GenerateUid *bool `protobuf:"varint,20,opt,name=generateUid,proto3,oneof" json:"generateUid,omitempty"` // 是否自动对uid为空的账号生成uid，不传入时默认为false
}

func (x *C2S_GetOrCreateAccount_Req) Reset() {
	*x = C2S_GetOrCreateAccount_Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccountService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_GetOrCreateAccount_Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_GetOrCreateAccount_Req) ProtoMessage() {}

func (x *C2S_GetOrCreateAccount_Req) ProtoReflect() protoreflect.Message {
	mi := &file_AccountService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_GetOrCreateAccount_Req.ProtoReflect.Descriptor instead.
func (*C2S_GetOrCreateAccount_Req) Descriptor() ([]byte, []int) {
	return file_AccountService_proto_rawDescGZIP(), []int{4}
}

func (x *C2S_GetOrCreateAccount_Req) GetInfoSelector() int32 {
	if x != nil {
		return x.InfoSelector
	}
	return 0
}

func (x *C2S_GetOrCreateAccount_Req) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *C2S_GetOrCreateAccount_Req) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *C2S_GetOrCreateAccount_Req) GetGenerateUid() bool {
	if x != nil && x.GenerateUid != nil {
		return *x.GenerateUid
	}
	return false
}

type GetAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist bool `protobuf:"varint,10,opt,name=exist,proto3" json:"exist,omitempty"` // 账号是否存在
	// 以下为账号基本信息，在账号存在时返回
	Uid         string           `protobuf:"bytes,11,opt,name=uid,proto3" json:"uid,omitempty"`                 // 账号对应用户的uid，@Deprecated 兼容老接口保留字段11，后续将废弃，请使用accountInfo.uid
	AccountInfo *AccountInfoGDto `protobuf:"bytes,20,opt,name=accountInfo,proto3" json:"accountInfo,omitempty"` // 账号信息详情
}

func (x *GetAccountReply) Reset() {
	*x = GetAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccountService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountReply) ProtoMessage() {}

func (x *GetAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_AccountService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountReply.ProtoReflect.Descriptor instead.
func (*GetAccountReply) Descriptor() ([]byte, []int) {
	return file_AccountService_proto_rawDescGZIP(), []int{5}
}

func (x *GetAccountReply) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

func (x *GetAccountReply) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetAccountReply) GetAccountInfo() *AccountInfoGDto {
	if x != nil {
		return x.AccountInfo
	}
	return nil
}

type S2C_GetAccount_Rpn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist bool `protobuf:"varint,10,opt,name=exist,proto3" json:"exist,omitempty"` // 账号是否存在
	// 以下为账号信息，在账号存在时返回
	AccountInfo *AccountInfoGDto `protobuf:"bytes,20,opt,name=accountInfo,proto3" json:"accountInfo,omitempty"` // 账号信息详情
}

func (x *S2C_GetAccount_Rpn) Reset() {
	*x = S2C_GetAccount_Rpn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccountService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_GetAccount_Rpn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_GetAccount_Rpn) ProtoMessage() {}

func (x *S2C_GetAccount_Rpn) ProtoReflect() protoreflect.Message {
	mi := &file_AccountService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_GetAccount_Rpn.ProtoReflect.Descriptor instead.
func (*S2C_GetAccount_Rpn) Descriptor() ([]byte, []int) {
	return file_AccountService_proto_rawDescGZIP(), []int{6}
}

func (x *S2C_GetAccount_Rpn) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

func (x *S2C_GetAccount_Rpn) GetAccountInfo() *AccountInfoGDto {
	if x != nil {
		return x.AccountInfo
	}
	return nil
}

// 创建账号参数
type C2S_CreateAccount_Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 获取方式 1-手机号 2-邮箱 3-账号名
	AccountType int32   `protobuf:"varint,10,opt,name=accountType,proto3" json:"accountType,omitempty"`
	AccountName string  `protobuf:"bytes,11,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountPwd  *string `protobuf:"bytes,20,opt,name=accountPwd,proto3,oneof" json:"accountPwd,omitempty"`
}

func (x *C2S_CreateAccount_Req) Reset() {
	*x = C2S_CreateAccount_Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccountService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_CreateAccount_Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_CreateAccount_Req) ProtoMessage() {}

func (x *C2S_CreateAccount_Req) ProtoReflect() protoreflect.Message {
	mi := &file_AccountService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_CreateAccount_Req.ProtoReflect.Descriptor instead.
func (*C2S_CreateAccount_Req) Descriptor() ([]byte, []int) {
	return file_AccountService_proto_rawDescGZIP(), []int{7}
}

func (x *C2S_CreateAccount_Req) GetAccountType() int32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *C2S_CreateAccount_Req) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *C2S_CreateAccount_Req) GetAccountPwd() string {
	if x != nil && x.AccountPwd != nil {
		return *x.AccountPwd
	}
	return ""
}

type S2C_CreateAccount_Rpn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsNew     bool    `protobuf:"varint,10,opt,name=isNew,proto3" json:"isNew,omitempty"`               // 是不是新建的账号
	AccountId *int64  `protobuf:"varint,20,opt,name=accountId,proto3,oneof" json:"accountId,omitempty"` // 账号id
	Uid       *string `protobuf:"bytes,30,opt,name=uid,proto3,oneof" json:"uid,omitempty"`              // 全局用户id
}

func (x *S2C_CreateAccount_Rpn) Reset() {
	*x = S2C_CreateAccount_Rpn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccountService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_CreateAccount_Rpn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_CreateAccount_Rpn) ProtoMessage() {}

func (x *S2C_CreateAccount_Rpn) ProtoReflect() protoreflect.Message {
	mi := &file_AccountService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_CreateAccount_Rpn.ProtoReflect.Descriptor instead.
func (*S2C_CreateAccount_Rpn) Descriptor() ([]byte, []int) {
	return file_AccountService_proto_rawDescGZIP(), []int{8}
}

func (x *S2C_CreateAccount_Rpn) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *S2C_CreateAccount_Rpn) GetAccountId() int64 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *S2C_CreateAccount_Rpn) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

// 账号查询参数
type C2S_AccountQuery_Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 过滤返回信息类别
	// 0x1 - 返回uid
	// 0x7FFFFFFF - 返回全部账户信息,对应十进制为2147483647
	InfoSelector int32 `protobuf:"varint,1,opt,name=infoSelector,proto3" json:"infoSelector,omitempty"`
	// 查询字段
	AccountName string `protobuf:"bytes,10,opt,name=accountName,proto3" json:"accountName,omitempty"` // 账户名
	Phone       string `protobuf:"bytes,11,opt,name=phone,proto3" json:"phone,omitempty"`             // 手机
	Email       string `protobuf:"bytes,12,opt,name=email,proto3" json:"email,omitempty"`             // 邮箱
	// 过滤字段
	Status int32 `protobuf:"varint,20,opt,name=status,proto3" json:"status,omitempty"` // 账号状态 0->禁用；1->启用；2->注销
	// 分页
	PageNum  int32 `protobuf:"varint,30,opt,name=pageNum,proto3" json:"pageNum,omitempty"`   // 不传入时默认为1，传入-1表示获取全部
	PageSize int32 `protobuf:"varint,31,opt,name=pageSize,proto3" json:"pageSize,omitempty"` // 不传入时默认为20
	// 排序
	SortField string `protobuf:"bytes,40,opt,name=sortField,proto3" json:"sortField,omitempty"`
	SortDir   string `protobuf:"bytes,41,opt,name=sortDir,proto3" json:"sortDir,omitempty"` // asc-增序，desc-降序
}

func (x *C2S_AccountQuery_Req) Reset() {
	*x = C2S_AccountQuery_Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccountService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_AccountQuery_Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_AccountQuery_Req) ProtoMessage() {}

func (x *C2S_AccountQuery_Req) ProtoReflect() protoreflect.Message {
	mi := &file_AccountService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_AccountQuery_Req.ProtoReflect.Descriptor instead.
func (*C2S_AccountQuery_Req) Descriptor() ([]byte, []int) {
	return file_AccountService_proto_rawDescGZIP(), []int{9}
}

func (x *C2S_AccountQuery_Req) GetInfoSelector() int32 {
	if x != nil {
		return x.InfoSelector
	}
	return 0
}

func (x *C2S_AccountQuery_Req) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *C2S_AccountQuery_Req) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *C2S_AccountQuery_Req) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *C2S_AccountQuery_Req) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *C2S_AccountQuery_Req) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *C2S_AccountQuery_Req) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *C2S_AccountQuery_Req) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *C2S_AccountQuery_Req) GetSortDir() string {
	if x != nil {
		return x.SortDir
	}
	return ""
}

// 账号列表
type S2C_Accounts_Rpn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum   int32              `protobuf:"varint,10,opt,name=pageNum,proto3" json:"pageNum,omitempty"`     // 当前页数
	PageSize  int32              `protobuf:"varint,11,opt,name=pageSize,proto3" json:"pageSize,omitempty"`   // 每页数量
	TotalPage int32              `protobuf:"varint,12,opt,name=totalPage,proto3" json:"totalPage,omitempty"` // 总页数
	Total     int64              `protobuf:"varint,13,opt,name=total,proto3" json:"total,omitempty"`         // 总数量
	Accounts  []*AccountInfoGDto `protobuf:"bytes,14,rep,name=accounts,proto3" json:"accounts,omitempty"`    // 账号详情数据
}

func (x *S2C_Accounts_Rpn) Reset() {
	*x = S2C_Accounts_Rpn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccountService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_Accounts_Rpn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_Accounts_Rpn) ProtoMessage() {}

func (x *S2C_Accounts_Rpn) ProtoReflect() protoreflect.Message {
	mi := &file_AccountService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_Accounts_Rpn.ProtoReflect.Descriptor instead.
func (*S2C_Accounts_Rpn) Descriptor() ([]byte, []int) {
	return file_AccountService_proto_rawDescGZIP(), []int{10}
}

func (x *S2C_Accounts_Rpn) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *S2C_Accounts_Rpn) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *S2C_Accounts_Rpn) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *S2C_Accounts_Rpn) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *S2C_Accounts_Rpn) GetAccounts() []*AccountInfoGDto {
	if x != nil {
		return x.Accounts
	}
	return nil
}

// 为未注册账号存储回调信息
type RegCallbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 触发回调的账号信息——仅用作比对检查用，不作为触发判断条件
	Type       int32  `protobuf:"varint,10,opt,name=type,proto3" json:"type,omitempty"`            // 识别账号的字段类型 1-手机号 2-邮箱
	Identifier string `protobuf:"bytes,11,opt,name=identifier,proto3" json:"identifier,omitempty"` // 账号的标识 手机号/邮箱
	// 回调参数
	Url string `protobuf:"bytes,20,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *RegCallbackRequest) Reset() {
	*x = RegCallbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccountService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegCallbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegCallbackRequest) ProtoMessage() {}

func (x *RegCallbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_AccountService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegCallbackRequest.ProtoReflect.Descriptor instead.
func (*RegCallbackRequest) Descriptor() ([]byte, []int) {
	return file_AccountService_proto_rawDescGZIP(), []int{11}
}

func (x *RegCallbackRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RegCallbackRequest) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *RegCallbackRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type RegCallbackReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 邀请码
	InviteCode string `protobuf:"bytes,10,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
}

func (x *RegCallbackReply) Reset() {
	*x = RegCallbackReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccountService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegCallbackReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegCallbackReply) ProtoMessage() {}

func (x *RegCallbackReply) ProtoReflect() protoreflect.Message {
	mi := &file_AccountService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegCallbackReply.ProtoReflect.Descriptor instead.
func (*RegCallbackReply) Descriptor() ([]byte, []int) {
	return file_AccountService_proto_rawDescGZIP(), []int{12}
}

func (x *RegCallbackReply) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

type LoginByTicketRequest_TicketLoginParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"` // 仅source为jumeaux时需要
	Ticket  string `protobuf:"bytes,2,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Source  string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *LoginByTicketRequest_TicketLoginParam) Reset() {
	*x = LoginByTicketRequest_TicketLoginParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccountService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginByTicketRequest_TicketLoginParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByTicketRequest_TicketLoginParam) ProtoMessage() {}

func (x *LoginByTicketRequest_TicketLoginParam) ProtoReflect() protoreflect.Message {
	mi := &file_AccountService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByTicketRequest_TicketLoginParam.ProtoReflect.Descriptor instead.
func (*LoginByTicketRequest_TicketLoginParam) Descriptor() ([]byte, []int) {
	return file_AccountService_proto_rawDescGZIP(), []int{0, 0}
}

func (x *LoginByTicketRequest_TicketLoginParam) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginByTicketRequest_TicketLoginParam) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

func (x *LoginByTicketRequest_TicketLoginParam) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

var File_AccountService_proto protoreflect.FileDescriptor

var file_AccountService_proto_rawDesc = []byte{
	0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x02,
	0x0a, 0x14, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x1a, 0x5c, 0x0a, 0x10, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x8a, 0x02, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x46, 0x69, 0x72, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x53, 0x0a, 0x0e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x41, 0x0a, 0x13,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x83, 0x04, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x47,
	0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x06, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x72,
	0x65, 0x63, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x75, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x77, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0c, 0x69, 0x6e,
	0x66, 0x6f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0xa1,
	0x01, 0x0a, 0x1a, 0x43, 0x32, 0x53, 0x5f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a,
	0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x25, 0x0a, 0x0b, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55,
	0x69, 0x64, 0x22, 0x75, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x3a, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x44, 0x74, 0x6f, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x66, 0x0a, 0x12, 0x53, 0x32, 0x43,
	0x5f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x52, 0x70, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x47, 0x44, 0x74, 0x6f, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x43, 0x32, 0x53, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x77, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x77,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x77, 0x64, 0x22, 0x7d, 0x0a, 0x15, 0x53, 0x32, 0x43, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x52, 0x70, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e,
	0x65, 0x77, 0x12, 0x21, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x03, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75,
	0x69, 0x64, 0x22, 0x8e, 0x02, 0x0a, 0x14, 0x43, 0x32, 0x53, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x69,
	0x6e, 0x66, 0x6f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72,
	0x74, 0x44, 0x69, 0x72, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x44, 0x69, 0x72, 0x22, 0xb2, 0x01, 0x0a, 0x10, 0x53, 0x32, 0x43, 0x5f, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x5f, 0x52, 0x70, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x34, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x44, 0x74, 0x6f, 0x52, 0x08,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x5a, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0x32, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x32, 0xec, 0x03, 0x0a, 0x0e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x32, 0x53,
	0x5f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x53, 0x32, 0x43, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x52, 0x70, 0x6e, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x53, 0x32, 0x43, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f, 0x52, 0x70,
	0x6e, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43,
	0x32, 0x53, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53,
	0x32, 0x43, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x52, 0x70, 0x6e, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1b, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x42, 0x0a, 0x1c, 0x63, 0x6e, 0x2e, 0x7a, 0x69,
	0x78, 0x65, 0x6c, 0x2e, 0x6a, 0x75, 0x6d, 0x65, 0x61, 0x75, 0x78, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x6c, 0x69, 0x62, 0x42, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0b,
	0x2e, 0x2f, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_AccountService_proto_rawDescOnce sync.Once
	file_AccountService_proto_rawDescData = file_AccountService_proto_rawDesc
)

func file_AccountService_proto_rawDescGZIP() []byte {
	file_AccountService_proto_rawDescOnce.Do(func() {
		file_AccountService_proto_rawDescData = protoimpl.X.CompressGZIP(file_AccountService_proto_rawDescData)
	})
	return file_AccountService_proto_rawDescData
}

var file_AccountService_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_AccountService_proto_goTypes = []interface{}{
	(*LoginByTicketRequest)(nil),                  // 0: account.LoginByTicketRequest
	(*UserLoginReply)(nil),                        // 1: account.UserLoginReply
	(*AccountInfoGDto)(nil),                       // 2: account.AccountInfoGDto
	(*GetAccountRequest)(nil),                     // 3: account.GetAccountRequest
	(*C2S_GetOrCreateAccount_Req)(nil),            // 4: account.C2S_GetOrCreateAccount_Req
	(*GetAccountReply)(nil),                       // 5: account.GetAccountReply
	(*S2C_GetAccount_Rpn)(nil),                    // 6: account.S2C_GetAccount_Rpn
	(*C2S_CreateAccount_Req)(nil),                 // 7: account.C2S_CreateAccount_Req
	(*S2C_CreateAccount_Rpn)(nil),                 // 8: account.S2C_CreateAccount_Rpn
	(*C2S_AccountQuery_Req)(nil),                  // 9: account.C2S_AccountQuery_Req
	(*S2C_Accounts_Rpn)(nil),                      // 10: account.S2C_Accounts_Rpn
	(*RegCallbackRequest)(nil),                    // 11: account.RegCallbackRequest
	(*RegCallbackReply)(nil),                      // 12: account.RegCallbackReply
	(*LoginByTicketRequest_TicketLoginParam)(nil), // 13: account.LoginByTicketRequest.TicketLoginParam
	nil,                           // 14: account.UserLoginReply.ThirdPartyInfoEntry
	(*timestamppb.Timestamp)(nil), // 15: google.protobuf.Timestamp
}
var file_AccountService_proto_depIdxs = []int32{
	13, // 0: account.LoginByTicketRequest.loginParam:type_name -> account.LoginByTicketRequest.TicketLoginParam
	14, // 1: account.UserLoginReply.thirdPartyInfo:type_name -> account.UserLoginReply.ThirdPartyInfoEntry
	15, // 2: account.AccountInfoGDto.createTime:type_name -> google.protobuf.Timestamp
	15, // 3: account.AccountInfoGDto.loginTime:type_name -> google.protobuf.Timestamp
	15, // 4: account.AccountInfoGDto.deprecateTime:type_name -> google.protobuf.Timestamp
	2,  // 5: account.GetAccountReply.accountInfo:type_name -> account.AccountInfoGDto
	2,  // 6: account.S2C_GetAccount_Rpn.accountInfo:type_name -> account.AccountInfoGDto
	2,  // 7: account.S2C_Accounts_Rpn.accounts:type_name -> account.AccountInfoGDto
	0,  // 8: account.AccountService.LoginByTicket:input_type -> account.LoginByTicketRequest
	3,  // 9: account.AccountService.GetAccount:input_type -> account.GetAccountRequest
	4,  // 10: account.AccountService.GetOrCreateAccount:input_type -> account.C2S_GetOrCreateAccount_Req
	9,  // 11: account.AccountService.QueryAccounts:input_type -> account.C2S_AccountQuery_Req
	7,  // 12: account.AccountService.CreateAccount:input_type -> account.C2S_CreateAccount_Req
	11, // 13: account.AccountService.SetRegisterCallback:input_type -> account.RegCallbackRequest
	1,  // 14: account.AccountService.LoginByTicket:output_type -> account.UserLoginReply
	5,  // 15: account.AccountService.GetAccount:output_type -> account.GetAccountReply
	6,  // 16: account.AccountService.GetOrCreateAccount:output_type -> account.S2C_GetAccount_Rpn
	10, // 17: account.AccountService.QueryAccounts:output_type -> account.S2C_Accounts_Rpn
	8,  // 18: account.AccountService.CreateAccount:output_type -> account.S2C_CreateAccount_Rpn
	12, // 19: account.AccountService.SetRegisterCallback:output_type -> account.RegCallbackReply
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_AccountService_proto_init() }
func file_AccountService_proto_init() {
	if File_AccountService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_AccountService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginByTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccountService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccountService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountInfoGDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccountService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccountService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_GetOrCreateAccount_Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccountService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccountService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_GetAccount_Rpn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccountService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_CreateAccount_Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccountService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_CreateAccount_Rpn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccountService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_AccountQuery_Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccountService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_Accounts_Rpn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccountService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegCallbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccountService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegCallbackReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccountService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginByTicketRequest_TicketLoginParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_AccountService_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_AccountService_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_AccountService_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_AccountService_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_AccountService_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_AccountService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_AccountService_proto_goTypes,
		DependencyIndexes: file_AccountService_proto_depIdxs,
		MessageInfos:      file_AccountService_proto_msgTypes,
	}.Build()
	File_AccountService_proto = out.File
	file_AccountService_proto_rawDesc = nil
	file_AccountService_proto_goTypes = nil
	file_AccountService_proto_depIdxs = nil
}
