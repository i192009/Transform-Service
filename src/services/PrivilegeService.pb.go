// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.1
// source: PrivilegeService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 角色权限点修改参数
type RoleModifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 隶属app
	AppId string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	// 角色名称
	RoleName string `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"`
	// 权限点match字段集合
	Privileges []string `protobuf:"bytes,3,rep,name=privileges,proto3" json:"privileges,omitempty"`
}

func (x *RoleModifyRequest) Reset() {
	*x = RoleModifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PrivilegeService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleModifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleModifyRequest) ProtoMessage() {}

func (x *RoleModifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_PrivilegeService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleModifyRequest.ProtoReflect.Descriptor instead.
func (*RoleModifyRequest) Descriptor() ([]byte, []int) {
	return file_PrivilegeService_proto_rawDescGZIP(), []int{0}
}

func (x *RoleModifyRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *RoleModifyRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleModifyRequest) GetPrivileges() []string {
	if x != nil {
		return x.Privileges
	}
	return nil
}

// 角色权限点查询参数
type GetRolePrivilegeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 隶属app
	AppId string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	// 角色名称
	RoleName string `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"`
}

func (x *GetRolePrivilegeRequest) Reset() {
	*x = GetRolePrivilegeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PrivilegeService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolePrivilegeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolePrivilegeRequest) ProtoMessage() {}

func (x *GetRolePrivilegeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_PrivilegeService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolePrivilegeRequest.ProtoReflect.Descriptor instead.
func (*GetRolePrivilegeRequest) Descriptor() ([]byte, []int) {
	return file_PrivilegeService_proto_rawDescGZIP(), []int{1}
}

func (x *GetRolePrivilegeRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GetRolePrivilegeRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

// 角色权限点修改参数
type RolePrivilegesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 权限点match字段集合
	Privileges []string `protobuf:"bytes,1,rep,name=privileges,proto3" json:"privileges,omitempty"`
}

func (x *RolePrivilegesReply) Reset() {
	*x = RolePrivilegesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PrivilegeService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolePrivilegesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePrivilegesReply) ProtoMessage() {}

func (x *RolePrivilegesReply) ProtoReflect() protoreflect.Message {
	mi := &file_PrivilegeService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePrivilegesReply.ProtoReflect.Descriptor instead.
func (*RolePrivilegesReply) Descriptor() ([]byte, []int) {
	return file_PrivilegeService_proto_rawDescGZIP(), []int{2}
}

func (x *RolePrivilegesReply) GetPrivileges() []string {
	if x != nil {
		return x.Privileges
	}
	return nil
}

// 授权关系修改参数（设置、新增用户、移除用户共用）
type AuthorizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 隶属app
	AppId string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	// 资源路径
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// 角色名称
	RoleName string `protobuf:"bytes,3,opt,name=roleName,proto3" json:"roleName,omitempty"`
	// 用户uid集合
	Users []string `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *AuthorizationRequest) Reset() {
	*x = AuthorizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PrivilegeService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationRequest) ProtoMessage() {}

func (x *AuthorizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_PrivilegeService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationRequest.ProtoReflect.Descriptor instead.
func (*AuthorizationRequest) Descriptor() ([]byte, []int) {
	return file_PrivilegeService_proto_rawDescGZIP(), []int{3}
}

func (x *AuthorizationRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AuthorizationRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AuthorizationRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *AuthorizationRequest) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

// 授权关系删除参数
type AuthorizationDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 隶属app
	AppId string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	// 资源路径
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// 角色名称
	RoleName string `protobuf:"bytes,3,opt,name=roleName,proto3" json:"roleName,omitempty"`
}

func (x *AuthorizationDeleteRequest) Reset() {
	*x = AuthorizationDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PrivilegeService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizationDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationDeleteRequest) ProtoMessage() {}

func (x *AuthorizationDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_PrivilegeService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationDeleteRequest.ProtoReflect.Descriptor instead.
func (*AuthorizationDeleteRequest) Descriptor() ([]byte, []int) {
	return file_PrivilegeService_proto_rawDescGZIP(), []int{4}
}

func (x *AuthorizationDeleteRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AuthorizationDeleteRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AuthorizationDeleteRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type EmptyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyReply) Reset() {
	*x = EmptyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PrivilegeService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyReply) ProtoMessage() {}

func (x *EmptyReply) ProtoReflect() protoreflect.Message {
	mi := &file_PrivilegeService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyReply.ProtoReflect.Descriptor instead.
func (*EmptyReply) Descriptor() ([]byte, []int) {
	return file_PrivilegeService_proto_rawDescGZIP(), []int{5}
}

// 资源删除参数
type ResourceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 隶属app
	AppId string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	// 资源路径
	Paths []string `protobuf:"bytes,2,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *ResourceDeleteRequest) Reset() {
	*x = ResourceDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PrivilegeService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceDeleteRequest) ProtoMessage() {}

func (x *ResourceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_PrivilegeService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceDeleteRequest.ProtoReflect.Descriptor instead.
func (*ResourceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_PrivilegeService_proto_rawDescGZIP(), []int{6}
}

func (x *ResourceDeleteRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ResourceDeleteRequest) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

type ResourceDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ResourceDeleteReply) Reset() {
	*x = ResourceDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PrivilegeService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceDeleteReply) ProtoMessage() {}

func (x *ResourceDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_PrivilegeService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceDeleteReply.ProtoReflect.Descriptor instead.
func (*ResourceDeleteReply) Descriptor() ([]byte, []int) {
	return file_PrivilegeService_proto_rawDescGZIP(), []int{7}
}

func (x *ResourceDeleteReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 查询用户拥有权限的资源集合
type AuthorizedResourceQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`         // 应用ID
	Uid       string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`             // 查询用户
	Privilege string `protobuf:"bytes,3,opt,name=privilege,proto3" json:"privilege,omitempty"` // 查询权限
}

func (x *AuthorizedResourceQueryRequest) Reset() {
	*x = AuthorizedResourceQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PrivilegeService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizedResourceQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedResourceQueryRequest) ProtoMessage() {}

func (x *AuthorizedResourceQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_PrivilegeService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedResourceQueryRequest.ProtoReflect.Descriptor instead.
func (*AuthorizedResourceQueryRequest) Descriptor() ([]byte, []int) {
	return file_PrivilegeService_proto_rawDescGZIP(), []int{8}
}

func (x *AuthorizedResourceQueryRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AuthorizedResourceQueryRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AuthorizedResourceQueryRequest) GetPrivilege() string {
	if x != nil {
		return x.Privilege
	}
	return ""
}

type AuthorizedResourceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermitResources []string `protobuf:"bytes,1,rep,name=permitResources,proto3" json:"permitResources,omitempty"` // 已授权资源
	ForbidResources []string `protobuf:"bytes,2,rep,name=forbidResources,proto3" json:"forbidResources,omitempty"` // 禁止访问资源
}

func (x *AuthorizedResourceReply) Reset() {
	*x = AuthorizedResourceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PrivilegeService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizedResourceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedResourceReply) ProtoMessage() {}

func (x *AuthorizedResourceReply) ProtoReflect() protoreflect.Message {
	mi := &file_PrivilegeService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedResourceReply.ProtoReflect.Descriptor instead.
func (*AuthorizedResourceReply) Descriptor() ([]byte, []int) {
	return file_PrivilegeService_proto_rawDescGZIP(), []int{9}
}

func (x *AuthorizedResourceReply) GetPermitResources() []string {
	if x != nil {
		return x.PermitResources
	}
	return nil
}

func (x *AuthorizedResourceReply) GetForbidResources() []string {
	if x != nil {
		return x.ForbidResources
	}
	return nil
}

// 查询用户在资源上拥有的权限集合
type AuthorizedPrivilegeQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"` // 应用ID
	Uid   string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`     // 查询用户
	Path  string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`   // 查询资源
}

func (x *AuthorizedPrivilegeQueryRequest) Reset() {
	*x = AuthorizedPrivilegeQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PrivilegeService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizedPrivilegeQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedPrivilegeQueryRequest) ProtoMessage() {}

func (x *AuthorizedPrivilegeQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_PrivilegeService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedPrivilegeQueryRequest.ProtoReflect.Descriptor instead.
func (*AuthorizedPrivilegeQueryRequest) Descriptor() ([]byte, []int) {
	return file_PrivilegeService_proto_rawDescGZIP(), []int{10}
}

func (x *AuthorizedPrivilegeQueryRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AuthorizedPrivilegeQueryRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AuthorizedPrivilegeQueryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type AuthorizedPrivilegeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Privileges []string `protobuf:"bytes,1,rep,name=privileges,proto3" json:"privileges,omitempty"` // 拥有权限
}

func (x *AuthorizedPrivilegeReply) Reset() {
	*x = AuthorizedPrivilegeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PrivilegeService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizedPrivilegeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedPrivilegeReply) ProtoMessage() {}

func (x *AuthorizedPrivilegeReply) ProtoReflect() protoreflect.Message {
	mi := &file_PrivilegeService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedPrivilegeReply.ProtoReflect.Descriptor instead.
func (*AuthorizedPrivilegeReply) Descriptor() ([]byte, []int) {
	return file_PrivilegeService_proto_rawDescGZIP(), []int{11}
}

func (x *AuthorizedPrivilegeReply) GetPrivileges() []string {
	if x != nil {
		return x.Privileges
	}
	return nil
}

// 查询在资源上拥有权限的用户集合
type AuthorizedUserQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`         // 应用ID
	Path      string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`           // 查询资源
	Privilege string `protobuf:"bytes,3,opt,name=privilege,proto3" json:"privilege,omitempty"` // 查询权限
}

func (x *AuthorizedUserQueryRequest) Reset() {
	*x = AuthorizedUserQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PrivilegeService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizedUserQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedUserQueryRequest) ProtoMessage() {}

func (x *AuthorizedUserQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_PrivilegeService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedUserQueryRequest.ProtoReflect.Descriptor instead.
func (*AuthorizedUserQueryRequest) Descriptor() ([]byte, []int) {
	return file_PrivilegeService_proto_rawDescGZIP(), []int{12}
}

func (x *AuthorizedUserQueryRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AuthorizedUserQueryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AuthorizedUserQueryRequest) GetPrivilege() string {
	if x != nil {
		return x.Privilege
	}
	return ""
}

type AuthorizedUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []string `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"` // 用户集合
}

func (x *AuthorizedUserReply) Reset() {
	*x = AuthorizedUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PrivilegeService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizedUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedUserReply) ProtoMessage() {}

func (x *AuthorizedUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_PrivilegeService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedUserReply.ProtoReflect.Descriptor instead.
func (*AuthorizedUserReply) Descriptor() ([]byte, []int) {
	return file_PrivilegeService_proto_rawDescGZIP(), []int{13}
}

func (x *AuthorizedUserReply) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

var File_PrivilegeService_proto protoreflect.FileDescriptor

var file_PrivilegeService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c,
	0x65, 0x67, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x65, 0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x13, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x22, 0x72, 0x0a, 0x14, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22,
	0x62, 0x0a, 0x1a, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x0c, 0x0a, 0x0a, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x43, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x22, 0x2b, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x66, 0x0a, 0x1e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x22, 0x6d, 0x0a, 0x17, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x62, 0x69,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x1f, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x3a, 0x0a, 0x18, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65,
	0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x1a, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x22, 0x2b, 0x0a, 0x13, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x32, 0xfd, 0x01, 0x0a, 0x0b, 0x52, 0x6f, 0x6c,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50,
	0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x4a, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67,
	0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67,
	0x65, 0x73, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65,
	0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0xf0, 0x05, 0x0a, 0x14, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x51, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x1f, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x4c, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67,
	0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65,
	0x67, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x55, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x29, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x6b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65,
	0x67, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x46, 0x0a, 0x1e, 0x63,
	0x6e, 0x2e, 0x7a, 0x69, 0x78, 0x65, 0x6c, 0x2e, 0x6a, 0x75, 0x6d, 0x65, 0x61, 0x75, 0x78, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x42, 0x15, 0x50,
	0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_PrivilegeService_proto_rawDescOnce sync.Once
	file_PrivilegeService_proto_rawDescData = file_PrivilegeService_proto_rawDesc
)

func file_PrivilegeService_proto_rawDescGZIP() []byte {
	file_PrivilegeService_proto_rawDescOnce.Do(func() {
		file_PrivilegeService_proto_rawDescData = protoimpl.X.CompressGZIP(file_PrivilegeService_proto_rawDescData)
	})
	return file_PrivilegeService_proto_rawDescData
}

var file_PrivilegeService_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_PrivilegeService_proto_goTypes = []interface{}{
	(*RoleModifyRequest)(nil),               // 0: privilege.RoleModifyRequest
	(*GetRolePrivilegeRequest)(nil),         // 1: privilege.GetRolePrivilegeRequest
	(*RolePrivilegesReply)(nil),             // 2: privilege.RolePrivilegesReply
	(*AuthorizationRequest)(nil),            // 3: privilege.AuthorizationRequest
	(*AuthorizationDeleteRequest)(nil),      // 4: privilege.AuthorizationDeleteRequest
	(*EmptyReply)(nil),                      // 5: privilege.EmptyReply
	(*ResourceDeleteRequest)(nil),           // 6: privilege.ResourceDeleteRequest
	(*ResourceDeleteReply)(nil),             // 7: privilege.ResourceDeleteReply
	(*AuthorizedResourceQueryRequest)(nil),  // 8: privilege.AuthorizedResourceQueryRequest
	(*AuthorizedResourceReply)(nil),         // 9: privilege.AuthorizedResourceReply
	(*AuthorizedPrivilegeQueryRequest)(nil), // 10: privilege.AuthorizedPrivilegeQueryRequest
	(*AuthorizedPrivilegeReply)(nil),        // 11: privilege.AuthorizedPrivilegeReply
	(*AuthorizedUserQueryRequest)(nil),      // 12: privilege.AuthorizedUserQueryRequest
	(*AuthorizedUserReply)(nil),             // 13: privilege.AuthorizedUserReply
	(*emptypb.Empty)(nil),                   // 14: google.protobuf.Empty
}
var file_PrivilegeService_proto_depIdxs = []int32{
	0,  // 0: privilege.RoleService.AddPrivileges:input_type -> privilege.RoleModifyRequest
	0,  // 1: privilege.RoleService.RemovePrivileges:input_type -> privilege.RoleModifyRequest
	1,  // 2: privilege.RoleService.GetRolePrivileges:input_type -> privilege.GetRolePrivilegeRequest
	3,  // 3: privilege.AuthorizationService.AddAuthorizationUsers:input_type -> privilege.AuthorizationRequest
	3,  // 4: privilege.AuthorizationService.RemoveAuthorizationUsers:input_type -> privilege.AuthorizationRequest
	4,  // 5: privilege.AuthorizationService.DeleteAuthorization:input_type -> privilege.AuthorizationDeleteRequest
	3,  // 6: privilege.AuthorizationService.SetAuthorization:input_type -> privilege.AuthorizationRequest
	6,  // 7: privilege.AuthorizationService.DeleteResources:input_type -> privilege.ResourceDeleteRequest
	8,  // 8: privilege.AuthorizationService.GetAuthorizedResource:input_type -> privilege.AuthorizedResourceQueryRequest
	10, // 9: privilege.AuthorizationService.GetAuthorizedPrivilege:input_type -> privilege.AuthorizedPrivilegeQueryRequest
	12, // 10: privilege.AuthorizationService.GetAuthorizedUser:input_type -> privilege.AuthorizedUserQueryRequest
	14, // 11: privilege.RoleService.AddPrivileges:output_type -> google.protobuf.Empty
	14, // 12: privilege.RoleService.RemovePrivileges:output_type -> google.protobuf.Empty
	2,  // 13: privilege.RoleService.GetRolePrivileges:output_type -> privilege.RolePrivilegesReply
	5,  // 14: privilege.AuthorizationService.AddAuthorizationUsers:output_type -> privilege.EmptyReply
	5,  // 15: privilege.AuthorizationService.RemoveAuthorizationUsers:output_type -> privilege.EmptyReply
	5,  // 16: privilege.AuthorizationService.DeleteAuthorization:output_type -> privilege.EmptyReply
	5,  // 17: privilege.AuthorizationService.SetAuthorization:output_type -> privilege.EmptyReply
	7,  // 18: privilege.AuthorizationService.DeleteResources:output_type -> privilege.ResourceDeleteReply
	9,  // 19: privilege.AuthorizationService.GetAuthorizedResource:output_type -> privilege.AuthorizedResourceReply
	11, // 20: privilege.AuthorizationService.GetAuthorizedPrivilege:output_type -> privilege.AuthorizedPrivilegeReply
	13, // 21: privilege.AuthorizationService.GetAuthorizedUser:output_type -> privilege.AuthorizedUserReply
	11, // [11:22] is the sub-list for method output_type
	0,  // [0:11] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_PrivilegeService_proto_init() }
func file_PrivilegeService_proto_init() {
	if File_PrivilegeService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_PrivilegeService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleModifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PrivilegeService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolePrivilegeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PrivilegeService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolePrivilegesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PrivilegeService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PrivilegeService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizationDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PrivilegeService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PrivilegeService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PrivilegeService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PrivilegeService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizedResourceQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PrivilegeService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizedResourceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PrivilegeService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizedPrivilegeQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PrivilegeService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizedPrivilegeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PrivilegeService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizedUserQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PrivilegeService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizedUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_PrivilegeService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_PrivilegeService_proto_goTypes,
		DependencyIndexes: file_PrivilegeService_proto_depIdxs,
		MessageInfos:      file_PrivilegeService_proto_msgTypes,
	}.Build()
	File_PrivilegeService_proto = out.File
	file_PrivilegeService_proto_rawDesc = nil
	file_PrivilegeService_proto_goTypes = nil
	file_PrivilegeService_proto_depIdxs = nil
}
