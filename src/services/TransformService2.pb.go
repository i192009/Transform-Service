// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.1
// source: TransformService2.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type C2S_SetTanentConfigReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId     string   `protobuf:"bytes,10,opt,name=PoolId,proto3" json:"PoolId,omitempty"`
	JobSetId   string   `protobuf:"bytes,20,opt,name=JobSetId,proto3" json:"JobSetId,omitempty"`
	AscPoolsId []string `protobuf:"bytes,30,rep,name=AscPoolsId,proto3" json:"AscPoolsId,omitempty"`
}

func (x *C2S_SetTanentConfigReqT) Reset() {
	*x = C2S_SetTanentConfigReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_SetTanentConfigReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_SetTanentConfigReqT) ProtoMessage() {}

func (x *C2S_SetTanentConfigReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_SetTanentConfigReqT.ProtoReflect.Descriptor instead.
func (*C2S_SetTanentConfigReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{0}
}

func (x *C2S_SetTanentConfigReqT) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *C2S_SetTanentConfigReqT) GetJobSetId() string {
	if x != nil {
		return x.JobSetId
	}
	return ""
}

func (x *C2S_SetTanentConfigReqT) GetAscPoolsId() []string {
	if x != nil {
		return x.AscPoolsId
	}
	return nil
}

type C2S_SetTanentConfigRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId   string `protobuf:"bytes,5,opt,name=ConfigId,proto3" json:"ConfigId,omitempty"`
	StatusCode string `protobuf:"bytes,10,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string `protobuf:"bytes,20,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *C2S_SetTanentConfigRpnT) Reset() {
	*x = C2S_SetTanentConfigRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_SetTanentConfigRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_SetTanentConfigRpnT) ProtoMessage() {}

func (x *C2S_SetTanentConfigRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_SetTanentConfigRpnT.ProtoReflect.Descriptor instead.
func (*C2S_SetTanentConfigRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{1}
}

func (x *C2S_SetTanentConfigRpnT) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *C2S_SetTanentConfigRpnT) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *C2S_SetTanentConfigRpnT) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type JobType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobTypeId           string `protobuf:"bytes,5,opt,name=JobTypeId,proto3" json:"JobTypeId,omitempty"`
	SystemSpecification int32  `protobuf:"varint,10,opt,name=SystemSpecification,proto3" json:"SystemSpecification,omitempty"` // 1 for POD, 2 for ECS
	ImageUrl            string `protobuf:"bytes,20,opt,name=ImageUrl,proto3" json:"ImageUrl,omitempty"`                        // Docker image URL for POD, system image for ECS
	// repeated string ExecutionScript = 7; // ZIP Format task execution script
	ReScript        string   `protobuf:"bytes,30,opt,name=ReScript,proto3" json:"ReScript,omitempty"`               // Used to estimate the resources consumed by the task
	ScScript        string   `protobuf:"bytes,40,opt,name=ScScript,proto3" json:"ScScript,omitempty"`               // Used to collect task status and progress from the output of the command line
	JeScript        string   `protobuf:"bytes,50,opt,name=JeScript,proto3" json:"JeScript,omitempty"`               // Task entry command
	FixedParameters []string `protobuf:"bytes,60,rep,name=FixedParameters,proto3" json:"FixedParameters,omitempty"` // Relevant parameters for the task
}

func (x *JobType) Reset() {
	*x = JobType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobType) ProtoMessage() {}

func (x *JobType) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobType.ProtoReflect.Descriptor instead.
func (*JobType) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{2}
}

func (x *JobType) GetJobTypeId() string {
	if x != nil {
		return x.JobTypeId
	}
	return ""
}

func (x *JobType) GetSystemSpecification() int32 {
	if x != nil {
		return x.SystemSpecification
	}
	return 0
}

func (x *JobType) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *JobType) GetReScript() string {
	if x != nil {
		return x.ReScript
	}
	return ""
}

func (x *JobType) GetScScript() string {
	if x != nil {
		return x.ScScript
	}
	return ""
}

func (x *JobType) GetJeScript() string {
	if x != nil {
		return x.JeScript
	}
	return ""
}

func (x *JobType) GetFixedParameters() []string {
	if x != nil {
		return x.FixedParameters
	}
	return nil
}

type C2S_QueryJobTypeRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode string     `protobuf:"bytes,10,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	JobTypes   []*JobType `protobuf:"bytes,20,rep,name=JobTypes,proto3" json:"JobTypes,omitempty"`
}

func (x *C2S_QueryJobTypeRpnT) Reset() {
	*x = C2S_QueryJobTypeRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_QueryJobTypeRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_QueryJobTypeRpnT) ProtoMessage() {}

func (x *C2S_QueryJobTypeRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_QueryJobTypeRpnT.ProtoReflect.Descriptor instead.
func (*C2S_QueryJobTypeRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{3}
}

func (x *C2S_QueryJobTypeRpnT) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *C2S_QueryJobTypeRpnT) GetJobTypes() []*JobType {
	if x != nil {
		return x.JobTypes
	}
	return nil
}

type C2S_QueryJobTypeReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobTypeIdFilter           string   `protobuf:"bytes,10,opt,name=JobTypeIdFilter,proto3" json:"JobTypeIdFilter,omitempty"`
	SystemSpecificationFilter int32    `protobuf:"varint,20,opt,name=SystemSpecificationFilter,proto3" json:"SystemSpecificationFilter,omitempty"`
	ImageUrlFilter            string   `protobuf:"bytes,30,opt,name=ImageUrlFilter,proto3" json:"ImageUrlFilter,omitempty"`
	ReScriptFilter            string   `protobuf:"bytes,40,opt,name=ReScriptFilter,proto3" json:"ReScriptFilter,omitempty"`
	ScScriptFilter            string   `protobuf:"bytes,50,opt,name=ScScriptFilter,proto3" json:"ScScriptFilter,omitempty"`
	JeScriptFilter            string   `protobuf:"bytes,60,opt,name=JeScriptFilter,proto3" json:"JeScriptFilter,omitempty"`
	FixedParametersFilter     []string `protobuf:"bytes,70,rep,name=FixedParametersFilter,proto3" json:"FixedParametersFilter,omitempty"`
	Skip                      int32    `protobuf:"varint,80,opt,name=skip,proto3" json:"skip,omitempty"`
	Page                      int32    `protobuf:"varint,90,opt,name=page,proto3" json:"page,omitempty"`
	Limit                     int32    `protobuf:"varint,100,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *C2S_QueryJobTypeReqT) Reset() {
	*x = C2S_QueryJobTypeReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_QueryJobTypeReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_QueryJobTypeReqT) ProtoMessage() {}

func (x *C2S_QueryJobTypeReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_QueryJobTypeReqT.ProtoReflect.Descriptor instead.
func (*C2S_QueryJobTypeReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{4}
}

func (x *C2S_QueryJobTypeReqT) GetJobTypeIdFilter() string {
	if x != nil {
		return x.JobTypeIdFilter
	}
	return ""
}

func (x *C2S_QueryJobTypeReqT) GetSystemSpecificationFilter() int32 {
	if x != nil {
		return x.SystemSpecificationFilter
	}
	return 0
}

func (x *C2S_QueryJobTypeReqT) GetImageUrlFilter() string {
	if x != nil {
		return x.ImageUrlFilter
	}
	return ""
}

func (x *C2S_QueryJobTypeReqT) GetReScriptFilter() string {
	if x != nil {
		return x.ReScriptFilter
	}
	return ""
}

func (x *C2S_QueryJobTypeReqT) GetScScriptFilter() string {
	if x != nil {
		return x.ScScriptFilter
	}
	return ""
}

func (x *C2S_QueryJobTypeReqT) GetJeScriptFilter() string {
	if x != nil {
		return x.JeScriptFilter
	}
	return ""
}

func (x *C2S_QueryJobTypeReqT) GetFixedParametersFilter() []string {
	if x != nil {
		return x.FixedParametersFilter
	}
	return nil
}

func (x *C2S_QueryJobTypeReqT) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *C2S_QueryJobTypeReqT) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *C2S_QueryJobTypeReqT) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type C2S_QueryJobSetReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobSetIdFilter string `protobuf:"bytes,5,opt,name=JobSetIdFilter,proto3" json:"JobSetIdFilter,omitempty"`
	// Filter by ResourcePoolId
	JobTypeIdFilter string `protobuf:"bytes,10,opt,name=JobTypeIdFilter,proto3" json:"JobTypeIdFilter,omitempty"`
	// Filter by Name
	NameFilter           string `protobuf:"bytes,20,opt,name=NameFilter,proto3" json:"NameFilter,omitempty"`
	TotalFilter          string `protobuf:"bytes,30,opt,name=TotalFilter,proto3" json:"TotalFilter,omitempty"`
	FixedParameterFilter string `protobuf:"bytes,60,opt,name=FixedParameterFilter,proto3" json:"FixedParameterFilter,omitempty"`
	Skip                 int32  `protobuf:"varint,80,opt,name=skip,proto3" json:"skip,omitempty"`
	Page                 int32  `protobuf:"varint,90,opt,name=page,proto3" json:"page,omitempty"`
	Limit                int32  `protobuf:"varint,100,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *C2S_QueryJobSetReqT) Reset() {
	*x = C2S_QueryJobSetReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_QueryJobSetReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_QueryJobSetReqT) ProtoMessage() {}

func (x *C2S_QueryJobSetReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_QueryJobSetReqT.ProtoReflect.Descriptor instead.
func (*C2S_QueryJobSetReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{5}
}

func (x *C2S_QueryJobSetReqT) GetJobSetIdFilter() string {
	if x != nil {
		return x.JobSetIdFilter
	}
	return ""
}

func (x *C2S_QueryJobSetReqT) GetJobTypeIdFilter() string {
	if x != nil {
		return x.JobTypeIdFilter
	}
	return ""
}

func (x *C2S_QueryJobSetReqT) GetNameFilter() string {
	if x != nil {
		return x.NameFilter
	}
	return ""
}

func (x *C2S_QueryJobSetReqT) GetTotalFilter() string {
	if x != nil {
		return x.TotalFilter
	}
	return ""
}

func (x *C2S_QueryJobSetReqT) GetFixedParameterFilter() string {
	if x != nil {
		return x.FixedParameterFilter
	}
	return ""
}

func (x *C2S_QueryJobSetReqT) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *C2S_QueryJobSetReqT) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *C2S_QueryJobSetReqT) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type C2S_QueryJobSetRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64     `protobuf:"varint,10,opt,name=Code,proto3" json:"Code,omitempty"`
	Jobsets []*JobSet `protobuf:"bytes,20,rep,name=Jobsets,proto3" json:"Jobsets,omitempty"`
}

func (x *C2S_QueryJobSetRpnT) Reset() {
	*x = C2S_QueryJobSetRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_QueryJobSetRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_QueryJobSetRpnT) ProtoMessage() {}

func (x *C2S_QueryJobSetRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_QueryJobSetRpnT.ProtoReflect.Descriptor instead.
func (*C2S_QueryJobSetRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{6}
}

func (x *C2S_QueryJobSetRpnT) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *C2S_QueryJobSetRpnT) GetJobsets() []*JobSet {
	if x != nil {
		return x.Jobsets
	}
	return nil
}

type JobSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobSetId        string `protobuf:"bytes,10,opt,name=JobSetId,proto3" json:"JobSetId,omitempty"`
	JobTypeId       string `protobuf:"bytes,20,opt,name=JobTypeId,proto3" json:"JobTypeId,omitempty"` //Id for the JobType
	Name            string `protobuf:"bytes,30,opt,name=Name,proto3" json:"Name,omitempty"`           //Name for the TaskSet
	Total           int64  `protobuf:"varint,40,opt,name=Total,proto3" json:"Total,omitempty"`        //Number of Total Task Sets Association
	FixedParameters string `protobuf:"bytes,50,opt,name=FixedParameters,proto3" json:"FixedParameters,omitempty"`
}

func (x *JobSet) Reset() {
	*x = JobSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSet) ProtoMessage() {}

func (x *JobSet) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSet.ProtoReflect.Descriptor instead.
func (*JobSet) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{7}
}

func (x *JobSet) GetJobSetId() string {
	if x != nil {
		return x.JobSetId
	}
	return ""
}

func (x *JobSet) GetJobTypeId() string {
	if x != nil {
		return x.JobTypeId
	}
	return ""
}

func (x *JobSet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobSet) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *JobSet) GetFixedParameters() string {
	if x != nil {
		return x.FixedParameters
	}
	return ""
}

type C2S_GetJobSetReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobTypeId string `protobuf:"bytes,10,opt,name=JobTypeId,proto3" json:"JobTypeId,omitempty"`
}

func (x *C2S_GetJobSetReqT) Reset() {
	*x = C2S_GetJobSetReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_GetJobSetReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_GetJobSetReqT) ProtoMessage() {}

func (x *C2S_GetJobSetReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_GetJobSetReqT.ProtoReflect.Descriptor instead.
func (*C2S_GetJobSetReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{8}
}

func (x *C2S_GetJobSetReqT) GetJobTypeId() string {
	if x != nil {
		return x.JobTypeId
	}
	return ""
}

type C2S_GetJobSetRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int64   `protobuf:"varint,10,opt,name=Code,proto3" json:"Code,omitempty"`
	Jobset *JobSet `protobuf:"bytes,20,opt,name=Jobset,proto3" json:"Jobset,omitempty"`
}

func (x *C2S_GetJobSetRpnT) Reset() {
	*x = C2S_GetJobSetRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_GetJobSetRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_GetJobSetRpnT) ProtoMessage() {}

func (x *C2S_GetJobSetRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_GetJobSetRpnT.ProtoReflect.Descriptor instead.
func (*C2S_GetJobSetRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{9}
}

func (x *C2S_GetJobSetRpnT) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *C2S_GetJobSetRpnT) GetJobset() *JobSet {
	if x != nil {
		return x.Jobset
	}
	return nil
}

type C2S_SetJobFixedArgumentsReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string   `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`               //ID for the Job Set
	Arguments []string `protobuf:"bytes,20,rep,name=Arguments,proto3" json:"Arguments,omitempty"` // List of the Arguments to update the Job Set
}

func (x *C2S_SetJobFixedArgumentsReqT) Reset() {
	*x = C2S_SetJobFixedArgumentsReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_SetJobFixedArgumentsReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_SetJobFixedArgumentsReqT) ProtoMessage() {}

func (x *C2S_SetJobFixedArgumentsReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_SetJobFixedArgumentsReqT.ProtoReflect.Descriptor instead.
func (*C2S_SetJobFixedArgumentsReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{10}
}

func (x *C2S_SetJobFixedArgumentsReqT) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *C2S_SetJobFixedArgumentsReqT) GetArguments() []string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type C2S_SetJobFixedArgumentsRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,20,opt,name=Code,proto3" json:"Code,omitempty"`      //Request Response Code for the Set Job Fixed Arguments Request
	Message string `protobuf:"bytes,30,opt,name=Message,proto3" json:"Message,omitempty"` //Request Response Message for the Set Job Fixed Arguments Request
}

func (x *C2S_SetJobFixedArgumentsRpnT) Reset() {
	*x = C2S_SetJobFixedArgumentsRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_SetJobFixedArgumentsRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_SetJobFixedArgumentsRpnT) ProtoMessage() {}

func (x *C2S_SetJobFixedArgumentsRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_SetJobFixedArgumentsRpnT.ProtoReflect.Descriptor instead.
func (*C2S_SetJobFixedArgumentsRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{11}
}

func (x *C2S_SetJobFixedArgumentsRpnT) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *C2S_SetJobFixedArgumentsRpnT) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type C2S_AddJobSetReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobTypeId       string `protobuf:"bytes,10,opt,name=JobTypeId,proto3" json:"JobTypeId,omitempty"`             //Id for the JobType
	Name            string `protobuf:"bytes,20,opt,name=Name,proto3" json:"Name,omitempty"`                       //Name for the TaskSet
	Total           int64  `protobuf:"varint,30,opt,name=Total,proto3" json:"Total,omitempty"`                    //Number of Total Task Sets Association
	FixedParameters string `protobuf:"bytes,40,opt,name=FixedParameters,proto3" json:"FixedParameters,omitempty"` //Other Parameters For TaskSet
}

func (x *C2S_AddJobSetReqT) Reset() {
	*x = C2S_AddJobSetReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_AddJobSetReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_AddJobSetReqT) ProtoMessage() {}

func (x *C2S_AddJobSetReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_AddJobSetReqT.ProtoReflect.Descriptor instead.
func (*C2S_AddJobSetReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{12}
}

func (x *C2S_AddJobSetReqT) GetJobTypeId() string {
	if x != nil {
		return x.JobTypeId
	}
	return ""
}

func (x *C2S_AddJobSetReqT) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *C2S_AddJobSetReqT) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *C2S_AddJobSetReqT) GetFixedParameters() string {
	if x != nil {
		return x.FixedParameters
	}
	return ""
}

type C2S_SetJobSetReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobSetId        string `protobuf:"bytes,10,opt,name=JobSetId,proto3" json:"JobSetId,omitempty"` //ID for the Task Set to be updated
	JobTypeId       string `protobuf:"bytes,15,opt,name=JobTypeId,proto3" json:"JobTypeId,omitempty"`
	Name            string `protobuf:"bytes,20,opt,name=Name,proto3" json:"Name,omitempty"`                       //Name for the TaskSet
	Total           int64  `protobuf:"varint,30,opt,name=Total,proto3" json:"Total,omitempty"`                    //Number of Total Task Sets Association
	FixedParameters string `protobuf:"bytes,40,opt,name=FixedParameters,proto3" json:"FixedParameters,omitempty"` //Other Parameters For TaskSet
}

func (x *C2S_SetJobSetReqT) Reset() {
	*x = C2S_SetJobSetReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_SetJobSetReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_SetJobSetReqT) ProtoMessage() {}

func (x *C2S_SetJobSetReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_SetJobSetReqT.ProtoReflect.Descriptor instead.
func (*C2S_SetJobSetReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{13}
}

func (x *C2S_SetJobSetReqT) GetJobSetId() string {
	if x != nil {
		return x.JobSetId
	}
	return ""
}

func (x *C2S_SetJobSetReqT) GetJobTypeId() string {
	if x != nil {
		return x.JobTypeId
	}
	return ""
}

func (x *C2S_SetJobSetReqT) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *C2S_SetJobSetReqT) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *C2S_SetJobSetReqT) GetFixedParameters() string {
	if x != nil {
		return x.FixedParameters
	}
	return ""
}

type C2S_RemoveJobSetReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobSetId string `protobuf:"bytes,10,opt,name=JobSetId,proto3" json:"JobSetId,omitempty"` //ID for the Job Set to be Deleted
}

func (x *C2S_RemoveJobSetReqT) Reset() {
	*x = C2S_RemoveJobSetReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_RemoveJobSetReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_RemoveJobSetReqT) ProtoMessage() {}

func (x *C2S_RemoveJobSetReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_RemoveJobSetReqT.ProtoReflect.Descriptor instead.
func (*C2S_RemoveJobSetReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{14}
}

func (x *C2S_RemoveJobSetReqT) GetJobSetId() string {
	if x != nil {
		return x.JobSetId
	}
	return ""
}

type C2S_RemoveJobSetRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,20,opt,name=Code,proto3" json:"Code,omitempty"`      //Request Response Code for the Set Job Set Interface
	Message string `protobuf:"bytes,30,opt,name=Message,proto3" json:"Message,omitempty"` //Request Response Message for the Set Job Set Interface
}

func (x *C2S_RemoveJobSetRpnT) Reset() {
	*x = C2S_RemoveJobSetRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_RemoveJobSetRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_RemoveJobSetRpnT) ProtoMessage() {}

func (x *C2S_RemoveJobSetRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_RemoveJobSetRpnT.ProtoReflect.Descriptor instead.
func (*C2S_RemoveJobSetRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{15}
}

func (x *C2S_RemoveJobSetRpnT) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *C2S_RemoveJobSetRpnT) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type C2S_SetJobSetRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobSetId string `protobuf:"bytes,10,opt,name=JobSetId,proto3" json:"JobSetId,omitempty"` //ID for the updated Task Set
	Code     int64  `protobuf:"varint,20,opt,name=Code,proto3" json:"Code,omitempty"`        //Request Response Code for the Set Task Set Interface
	Message  string `protobuf:"bytes,30,opt,name=Message,proto3" json:"Message,omitempty"`   //Request Response Message for the Set Task Set Interface
}

func (x *C2S_SetJobSetRpnT) Reset() {
	*x = C2S_SetJobSetRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_SetJobSetRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_SetJobSetRpnT) ProtoMessage() {}

func (x *C2S_SetJobSetRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_SetJobSetRpnT.ProtoReflect.Descriptor instead.
func (*C2S_SetJobSetRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{16}
}

func (x *C2S_SetJobSetRpnT) GetJobSetId() string {
	if x != nil {
		return x.JobSetId
	}
	return ""
}

func (x *C2S_SetJobSetRpnT) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *C2S_SetJobSetRpnT) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type C2S_AddJobSetRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobSetId string `protobuf:"bytes,10,opt,name=JobSetId,proto3" json:"JobSetId,omitempty"` //ID for the New Added Task Set
	Code     int64  `protobuf:"varint,20,opt,name=Code,proto3" json:"Code,omitempty"`        //Request Response Code for the Add Task Set Interface
	Message  string `protobuf:"bytes,30,opt,name=Message,proto3" json:"Message,omitempty"`   //Request Response Message for the Add Task Set Interface
}

func (x *C2S_AddJobSetRpnT) Reset() {
	*x = C2S_AddJobSetRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_AddJobSetRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_AddJobSetRpnT) ProtoMessage() {}

func (x *C2S_AddJobSetRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_AddJobSetRpnT.ProtoReflect.Descriptor instead.
func (*C2S_AddJobSetRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{17}
}

func (x *C2S_AddJobSetRpnT) GetJobSetId() string {
	if x != nil {
		return x.JobSetId
	}
	return ""
}

func (x *C2S_AddJobSetRpnT) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *C2S_AddJobSetRpnT) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type C2S_GetResourcePoolReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId   string  `protobuf:"bytes,10,opt,name=PoolId,proto3" json:"PoolId,omitempty"`
	PoolName *string `protobuf:"bytes,20,opt,name=PoolName,proto3,oneof" json:"PoolName,omitempty"`
}

func (x *C2S_GetResourcePoolReqT) Reset() {
	*x = C2S_GetResourcePoolReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_GetResourcePoolReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_GetResourcePoolReqT) ProtoMessage() {}

func (x *C2S_GetResourcePoolReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_GetResourcePoolReqT.ProtoReflect.Descriptor instead.
func (*C2S_GetResourcePoolReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{18}
}

func (x *C2S_GetResourcePoolReqT) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *C2S_GetResourcePoolReqT) GetPoolName() string {
	if x != nil && x.PoolName != nil {
		return *x.PoolName
	}
	return ""
}

type C2S_GetResourcePoolRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pool    *ResourcePool `protobuf:"bytes,10,opt,name=Pool,proto3" json:"Pool,omitempty"`
	Message *string       `protobuf:"bytes,20,opt,name=Message,proto3,oneof" json:"Message,omitempty"`
	Code    *string       `protobuf:"bytes,30,opt,name=Code,proto3,oneof" json:"Code,omitempty"`
}

func (x *C2S_GetResourcePoolRpnT) Reset() {
	*x = C2S_GetResourcePoolRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_GetResourcePoolRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_GetResourcePoolRpnT) ProtoMessage() {}

func (x *C2S_GetResourcePoolRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_GetResourcePoolRpnT.ProtoReflect.Descriptor instead.
func (*C2S_GetResourcePoolRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{19}
}

func (x *C2S_GetResourcePoolRpnT) GetPool() *ResourcePool {
	if x != nil {
		return x.Pool
	}
	return nil
}

func (x *C2S_GetResourcePoolRpnT) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *C2S_GetResourcePoolRpnT) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

// Request parameters for querying resource pools
type C2S_QueryResourcePoolReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter by ResourcePoolId
	ResourcePoolIdFilter string `protobuf:"bytes,10,opt,name=ResourcePoolIdFilter,proto3" json:"ResourcePoolIdFilter,omitempty"`
	NameSpaceFilter      string `protobuf:"bytes,15,opt,name=NameSpaceFilter,proto3" json:"NameSpaceFilter,omitempty"` //Temporal NameSpace
	// Filter by Name
	NameFilter string `protobuf:"bytes,20,opt,name=NameFilter,proto3" json:"NameFilter,omitempty"`
	// Filter by IsShared
	IsSharedFilter bool `protobuf:"varint,30,opt,name=IsSharedFilter,proto3" json:"IsSharedFilter,omitempty"`
	// Filter by ScalingStrategy
	ScalingStrategyFilter int32 `protobuf:"varint,40,opt,name=ScalingStrategyFilter,proto3" json:"ScalingStrategyFilter,omitempty"`
	// Filter by ScalingLimit
	ScalingLimitFilter int32  `protobuf:"varint,50,opt,name=ScalingLimitFilter,proto3" json:"ScalingLimitFilter,omitempty"`
	CustomFilter       string `protobuf:"bytes,60,opt,name=CustomFilter,proto3" json:"CustomFilter,omitempty"`
	Skip               int32  `protobuf:"varint,80,opt,name=skip,proto3" json:"skip,omitempty"`
	Page               int32  `protobuf:"varint,90,opt,name=page,proto3" json:"page,omitempty"`
	Limit              int32  `protobuf:"varint,100,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *C2S_QueryResourcePoolReqT) Reset() {
	*x = C2S_QueryResourcePoolReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_QueryResourcePoolReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_QueryResourcePoolReqT) ProtoMessage() {}

func (x *C2S_QueryResourcePoolReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_QueryResourcePoolReqT.ProtoReflect.Descriptor instead.
func (*C2S_QueryResourcePoolReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{20}
}

func (x *C2S_QueryResourcePoolReqT) GetResourcePoolIdFilter() string {
	if x != nil {
		return x.ResourcePoolIdFilter
	}
	return ""
}

func (x *C2S_QueryResourcePoolReqT) GetNameSpaceFilter() string {
	if x != nil {
		return x.NameSpaceFilter
	}
	return ""
}

func (x *C2S_QueryResourcePoolReqT) GetNameFilter() string {
	if x != nil {
		return x.NameFilter
	}
	return ""
}

func (x *C2S_QueryResourcePoolReqT) GetIsSharedFilter() bool {
	if x != nil {
		return x.IsSharedFilter
	}
	return false
}

func (x *C2S_QueryResourcePoolReqT) GetScalingStrategyFilter() int32 {
	if x != nil {
		return x.ScalingStrategyFilter
	}
	return 0
}

func (x *C2S_QueryResourcePoolReqT) GetScalingLimitFilter() int32 {
	if x != nil {
		return x.ScalingLimitFilter
	}
	return 0
}

func (x *C2S_QueryResourcePoolReqT) GetCustomFilter() string {
	if x != nil {
		return x.CustomFilter
	}
	return ""
}

func (x *C2S_QueryResourcePoolReqT) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *C2S_QueryResourcePoolReqT) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *C2S_QueryResourcePoolReqT) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Response parameters for querying resource pools
type C2S_QueryResourcePoolRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    *string `protobuf:"bytes,10,opt,name=Code,proto3,oneof" json:"Code,omitempty"`
	Message *string `protobuf:"bytes,20,opt,name=Message,proto3,oneof" json:"Message,omitempty"`
	// List of resource pools matching the query criteria
	ResourcePools []*ResourcePool `protobuf:"bytes,30,rep,name=ResourcePools,proto3" json:"ResourcePools,omitempty"`
}

func (x *C2S_QueryResourcePoolRpnT) Reset() {
	*x = C2S_QueryResourcePoolRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_QueryResourcePoolRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_QueryResourcePoolRpnT) ProtoMessage() {}

func (x *C2S_QueryResourcePoolRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_QueryResourcePoolRpnT.ProtoReflect.Descriptor instead.
func (*C2S_QueryResourcePoolRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{21}
}

func (x *C2S_QueryResourcePoolRpnT) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *C2S_QueryResourcePoolRpnT) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *C2S_QueryResourcePoolRpnT) GetResourcePools() []*ResourcePool {
	if x != nil {
		return x.ResourcePools
	}
	return nil
}

// Definition of a resource pool
type ResourcePool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourcePoolId  string                          `protobuf:"bytes,10,opt,name=ResourcePoolId,proto3" json:"ResourcePoolId,omitempty"`
	NameSpace       string                          `protobuf:"bytes,20,opt,name=NameSpace,proto3" json:"NameSpace,omitempty"` //Temporal NameSpace
	Name            string                          `protobuf:"bytes,30,opt,name=Name,proto3" json:"Name,omitempty"`
	IsShared        bool                            `protobuf:"varint,40,opt,name=IsShared,proto3" json:"IsShared,omitempty"`
	ScalingStrategy int32                           `protobuf:"varint,50,opt,name=ScalingStrategy,proto3" json:"ScalingStrategy,omitempty"`
	ScalingLimit    int32                           `protobuf:"varint,60,opt,name=ScalingLimit,proto3" json:"ScalingLimit,omitempty"`
	QueueLimit      int32                           `protobuf:"varint,70,opt,name=QueueLimit,proto3" json:"QueueLimit,omitempty"`
	Fixed           int32                           `protobuf:"varint,80,opt,name=Fixed,proto3" json:"Fixed,omitempty"`
	DefaultTaskSet  int32                           `protobuf:"varint,90,opt,name=DefaultTaskSet,proto3" json:"DefaultTaskSet,omitempty"`
	ResourceLimits  map[string]*ResourceLimitOfTask `protobuf:"bytes,100,rep,name=ResourceLimits,proto3" json:"ResourceLimits,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ResourcePool) Reset() {
	*x = ResourcePool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcePool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePool) ProtoMessage() {}

func (x *ResourcePool) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePool.ProtoReflect.Descriptor instead.
func (*ResourcePool) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{22}
}

func (x *ResourcePool) GetResourcePoolId() string {
	if x != nil {
		return x.ResourcePoolId
	}
	return ""
}

func (x *ResourcePool) GetNameSpace() string {
	if x != nil {
		return x.NameSpace
	}
	return ""
}

func (x *ResourcePool) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourcePool) GetIsShared() bool {
	if x != nil {
		return x.IsShared
	}
	return false
}

func (x *ResourcePool) GetScalingStrategy() int32 {
	if x != nil {
		return x.ScalingStrategy
	}
	return 0
}

func (x *ResourcePool) GetScalingLimit() int32 {
	if x != nil {
		return x.ScalingLimit
	}
	return 0
}

func (x *ResourcePool) GetQueueLimit() int32 {
	if x != nil {
		return x.QueueLimit
	}
	return 0
}

func (x *ResourcePool) GetFixed() int32 {
	if x != nil {
		return x.Fixed
	}
	return 0
}

func (x *ResourcePool) GetDefaultTaskSet() int32 {
	if x != nil {
		return x.DefaultTaskSet
	}
	return 0
}

func (x *ResourcePool) GetResourceLimits() map[string]*ResourceLimitOfTask {
	if x != nil {
		return x.ResourceLimits
	}
	return nil
}

// Definition of resource limits for a specific task type
type ResourceLimitOfTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobTypeId    string `protobuf:"bytes,10,opt,name=JobTypeId,proto3" json:"JobTypeId,omitempty"`        // Identifier for the task type
	ScalingLimit int32  `protobuf:"varint,20,opt,name=ScalingLimit,proto3" json:"ScalingLimit,omitempty"` // Limit on how many machines can be used for the task type
}

func (x *ResourceLimitOfTask) Reset() {
	*x = ResourceLimitOfTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceLimitOfTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLimitOfTask) ProtoMessage() {}

func (x *ResourceLimitOfTask) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceLimitOfTask.ProtoReflect.Descriptor instead.
func (*ResourceLimitOfTask) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{23}
}

func (x *ResourceLimitOfTask) GetJobTypeId() string {
	if x != nil {
		return x.JobTypeId
	}
	return ""
}

func (x *ResourceLimitOfTask) GetScalingLimit() int32 {
	if x != nil {
		return x.ScalingLimit
	}
	return 0
}

// Request parameters for adding a new resource pool
type C2S_AddResourcePoolReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,10,opt,name=Name,proto3" json:"Name,omitempty"`           // Display name for the resource pool
	NameSpace string `protobuf:"bytes,15,opt,name=NameSpace,proto3" json:"NameSpace,omitempty"` //Temporal NameSpace
	IsShared  bool   `protobuf:"varint,20,opt,name=isShared,proto3" json:"isShared,omitempty"`  // Indicates whether the resource pool is shared or not
	// Shared resource pools can be used jointly by multiple enterprises
	ScalingStrategy int32                  `protobuf:"varint,30,opt,name=ScalingStrategy,proto3" json:"ScalingStrategy,omitempty"` // Determines whether Scaling is enabled or not
	ScalingLimit    int32                  `protobuf:"varint,40,opt,name=ScalingLimit,proto3" json:"ScalingLimit,omitempty"`       // Limit on the upper number of scaling machines
	QueueLimit      int32                  `protobuf:"varint,50,opt,name=QueueLimit,proto3" json:"QueueLimit,omitempty"`           // Limit on the queue of jobs
	Fixed           int32                  `protobuf:"varint,60,opt,name=Fixed,proto3" json:"Fixed,omitempty"`                     // Number of reserved machines
	DefaultTaskSet  int32                  `protobuf:"varint,70,opt,name=DefaultTaskSet,proto3" json:"DefaultTaskSet,omitempty"`   // Default Task Set
	ResourceLimit   []*ResourceLimitOfTask `protobuf:"bytes,80,rep,name=ResourceLimit,proto3" json:"ResourceLimit,omitempty"`      // Limits on the number of available machines for each task type
}

func (x *C2S_AddResourcePoolReqT) Reset() {
	*x = C2S_AddResourcePoolReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_AddResourcePoolReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_AddResourcePoolReqT) ProtoMessage() {}

func (x *C2S_AddResourcePoolReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_AddResourcePoolReqT.ProtoReflect.Descriptor instead.
func (*C2S_AddResourcePoolReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{24}
}

func (x *C2S_AddResourcePoolReqT) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *C2S_AddResourcePoolReqT) GetNameSpace() string {
	if x != nil {
		return x.NameSpace
	}
	return ""
}

func (x *C2S_AddResourcePoolReqT) GetIsShared() bool {
	if x != nil {
		return x.IsShared
	}
	return false
}

func (x *C2S_AddResourcePoolReqT) GetScalingStrategy() int32 {
	if x != nil {
		return x.ScalingStrategy
	}
	return 0
}

func (x *C2S_AddResourcePoolReqT) GetScalingLimit() int32 {
	if x != nil {
		return x.ScalingLimit
	}
	return 0
}

func (x *C2S_AddResourcePoolReqT) GetQueueLimit() int32 {
	if x != nil {
		return x.QueueLimit
	}
	return 0
}

func (x *C2S_AddResourcePoolReqT) GetFixed() int32 {
	if x != nil {
		return x.Fixed
	}
	return 0
}

func (x *C2S_AddResourcePoolReqT) GetDefaultTaskSet() int32 {
	if x != nil {
		return x.DefaultTaskSet
	}
	return 0
}

func (x *C2S_AddResourcePoolReqT) GetResourceLimit() []*ResourceLimitOfTask {
	if x != nil {
		return x.ResourceLimit
	}
	return nil
}

// Response parameters for adding a new resource pool
type C2S_AddResourcePoolRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourcePoolId string `protobuf:"bytes,10,opt,name=ResourcePoolId,proto3" json:"ResourcePoolId,omitempty"` // Identifier of the newly added resource pool
	NameSpace      string `protobuf:"bytes,15,opt,name=NameSpace,proto3" json:"NameSpace,omitempty"`           //Temporal NameSpace
	StatusCode     string `protobuf:"bytes,20,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`         // Code denoting the service execution status
	Message        string `protobuf:"bytes,30,opt,name=Message,proto3" json:"Message,omitempty"`               // Message from the service after execution
}

func (x *C2S_AddResourcePoolRpnT) Reset() {
	*x = C2S_AddResourcePoolRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_AddResourcePoolRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_AddResourcePoolRpnT) ProtoMessage() {}

func (x *C2S_AddResourcePoolRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_AddResourcePoolRpnT.ProtoReflect.Descriptor instead.
func (*C2S_AddResourcePoolRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{25}
}

func (x *C2S_AddResourcePoolRpnT) GetResourcePoolId() string {
	if x != nil {
		return x.ResourcePoolId
	}
	return ""
}

func (x *C2S_AddResourcePoolRpnT) GetNameSpace() string {
	if x != nil {
		return x.NameSpace
	}
	return ""
}

func (x *C2S_AddResourcePoolRpnT) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *C2S_AddResourcePoolRpnT) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request parameters for removing an existing resource pool
type C2S_RemoveResourcePoolReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId string `protobuf:"bytes,10,opt,name=PoolId,proto3" json:"PoolId,omitempty"` // Identifier of the resource pool to be removed
}

func (x *C2S_RemoveResourcePoolReqT) Reset() {
	*x = C2S_RemoveResourcePoolReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_RemoveResourcePoolReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_RemoveResourcePoolReqT) ProtoMessage() {}

func (x *C2S_RemoveResourcePoolReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_RemoveResourcePoolReqT.ProtoReflect.Descriptor instead.
func (*C2S_RemoveResourcePoolReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{26}
}

func (x *C2S_RemoveResourcePoolReqT) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

// Response parameters for removing an existing resource pool
type C2S_RemoveResourcePoolRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode string `protobuf:"bytes,20,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"` // Code denoting the service execution status
	Message    string `protobuf:"bytes,30,opt,name=Message,proto3" json:"Message,omitempty"`       // Message from the service after execution
}

func (x *C2S_RemoveResourcePoolRpnT) Reset() {
	*x = C2S_RemoveResourcePoolRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_RemoveResourcePoolRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_RemoveResourcePoolRpnT) ProtoMessage() {}

func (x *C2S_RemoveResourcePoolRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_RemoveResourcePoolRpnT.ProtoReflect.Descriptor instead.
func (*C2S_RemoveResourcePoolRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{27}
}

func (x *C2S_RemoveResourcePoolRpnT) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *C2S_RemoveResourcePoolRpnT) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request parameters for configuring or updating the settings of an existing resource pool
type C2S_SetResourcePoolReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourcePoolId string `protobuf:"bytes,10,opt,name=ResourcePoolId,proto3" json:"ResourcePoolId,omitempty"` // Identifier of the resource pool to be configured or updated
	NameSpace      string `protobuf:"bytes,15,opt,name=NameSpace,proto3" json:"NameSpace,omitempty"`           //Temporal NameSpace
	Name           string `protobuf:"bytes,20,opt,name=Name,proto3" json:"Name,omitempty"`                     // Display name for the resource pool
	IsShared       bool   `protobuf:"varint,30,opt,name=isShared,proto3" json:"isShared,omitempty"`            // Indicates whether the resource pool is shared or not
	// Shared resource pools can be used jointly by multiple enterprises
	ScalingStrategy int32                  `protobuf:"varint,40,opt,name=ScalingStrategy,proto3" json:"ScalingStrategy,omitempty"` // Determines whether Scaling is enabled or not
	ScalingLimit    int32                  `protobuf:"varint,50,opt,name=ScalingLimit,proto3" json:"ScalingLimit,omitempty"`       // Limit on the upper number of scaling machines
	QueueLimit      int32                  `protobuf:"varint,60,opt,name=QueueLimit,proto3" json:"QueueLimit,omitempty"`           // Limit on the queue of jobs
	Fixed           int32                  `protobuf:"varint,70,opt,name=Fixed,proto3" json:"Fixed,omitempty"`                     // Number of reserved machines
	DefaultTaskSet  int32                  `protobuf:"varint,80,opt,name=DefaultTaskSet,proto3" json:"DefaultTaskSet,omitempty"`   // Default Task Set
	ResourceLimit   []*ResourceLimitOfTask `protobuf:"bytes,90,rep,name=ResourceLimit,proto3" json:"ResourceLimit,omitempty"`      // Limits on the number of available machines for each task type
}

func (x *C2S_SetResourcePoolReqT) Reset() {
	*x = C2S_SetResourcePoolReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_SetResourcePoolReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_SetResourcePoolReqT) ProtoMessage() {}

func (x *C2S_SetResourcePoolReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_SetResourcePoolReqT.ProtoReflect.Descriptor instead.
func (*C2S_SetResourcePoolReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{28}
}

func (x *C2S_SetResourcePoolReqT) GetResourcePoolId() string {
	if x != nil {
		return x.ResourcePoolId
	}
	return ""
}

func (x *C2S_SetResourcePoolReqT) GetNameSpace() string {
	if x != nil {
		return x.NameSpace
	}
	return ""
}

func (x *C2S_SetResourcePoolReqT) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *C2S_SetResourcePoolReqT) GetIsShared() bool {
	if x != nil {
		return x.IsShared
	}
	return false
}

func (x *C2S_SetResourcePoolReqT) GetScalingStrategy() int32 {
	if x != nil {
		return x.ScalingStrategy
	}
	return 0
}

func (x *C2S_SetResourcePoolReqT) GetScalingLimit() int32 {
	if x != nil {
		return x.ScalingLimit
	}
	return 0
}

func (x *C2S_SetResourcePoolReqT) GetQueueLimit() int32 {
	if x != nil {
		return x.QueueLimit
	}
	return 0
}

func (x *C2S_SetResourcePoolReqT) GetFixed() int32 {
	if x != nil {
		return x.Fixed
	}
	return 0
}

func (x *C2S_SetResourcePoolReqT) GetDefaultTaskSet() int32 {
	if x != nil {
		return x.DefaultTaskSet
	}
	return 0
}

func (x *C2S_SetResourcePoolReqT) GetResourceLimit() []*ResourceLimitOfTask {
	if x != nil {
		return x.ResourceLimit
	}
	return nil
}

// Response parameters for configuring or updating an existing resource pool
type C2S_SetResourcePoolRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourcePoolId string `protobuf:"bytes,10,opt,name=ResourcePoolId,proto3" json:"ResourcePoolId,omitempty"`
	StatusCode     string `protobuf:"bytes,20,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"` // Code denoting the service execution status
	Message        string `protobuf:"bytes,30,opt,name=Message,proto3" json:"Message,omitempty"`       // Message from the service after execution
}

func (x *C2S_SetResourcePoolRpnT) Reset() {
	*x = C2S_SetResourcePoolRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_SetResourcePoolRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_SetResourcePoolRpnT) ProtoMessage() {}

func (x *C2S_SetResourcePoolRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_SetResourcePoolRpnT.ProtoReflect.Descriptor instead.
func (*C2S_SetResourcePoolRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{29}
}

func (x *C2S_SetResourcePoolRpnT) GetResourcePoolId() string {
	if x != nil {
		return x.ResourcePoolId
	}
	return ""
}

func (x *C2S_SetResourcePoolRpnT) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *C2S_SetResourcePoolRpnT) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request Parameters for Adding a Job Type
type C2S_AddJobTypeReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemSpecification int32  `protobuf:"varint,10,opt,name=SystemSpecification,proto3" json:"SystemSpecification,omitempty"` // 1 for POD, 2 for ECS
	ImageUrl            string `protobuf:"bytes,20,opt,name=ImageUrl,proto3" json:"ImageUrl,omitempty"`                        // Docker image URL for POD, system image for ECS
	// repeated string ExecutionScript = 7; // ZIP Format task execution script
	ReScript        string   `protobuf:"bytes,30,opt,name=ReScript,proto3" json:"ReScript,omitempty"`               // Used to estimate the resources consumed by the task
	ScScript        string   `protobuf:"bytes,40,opt,name=ScScript,proto3" json:"ScScript,omitempty"`               // Used to collect task status and progress from the output of the command line
	JeScript        string   `protobuf:"bytes,50,opt,name=JeScript,proto3" json:"JeScript,omitempty"`               // Task entry command
	FixedParameters []string `protobuf:"bytes,60,rep,name=FixedParameters,proto3" json:"FixedParameters,omitempty"` // Relevant parameters for the task
}

func (x *C2S_AddJobTypeReqT) Reset() {
	*x = C2S_AddJobTypeReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_AddJobTypeReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_AddJobTypeReqT) ProtoMessage() {}

func (x *C2S_AddJobTypeReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_AddJobTypeReqT.ProtoReflect.Descriptor instead.
func (*C2S_AddJobTypeReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{30}
}

func (x *C2S_AddJobTypeReqT) GetSystemSpecification() int32 {
	if x != nil {
		return x.SystemSpecification
	}
	return 0
}

func (x *C2S_AddJobTypeReqT) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *C2S_AddJobTypeReqT) GetReScript() string {
	if x != nil {
		return x.ReScript
	}
	return ""
}

func (x *C2S_AddJobTypeReqT) GetScScript() string {
	if x != nil {
		return x.ScScript
	}
	return ""
}

func (x *C2S_AddJobTypeReqT) GetJeScript() string {
	if x != nil {
		return x.JeScript
	}
	return ""
}

func (x *C2S_AddJobTypeReqT) GetFixedParameters() []string {
	if x != nil {
		return x.FixedParameters
	}
	return nil
}

// Response Parameters for Adding a Job Type
type C2S_GetJobTypeReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobTypeId string `protobuf:"bytes,10,opt,name=JobTypeId,proto3" json:"JobTypeId,omitempty"` // ID of the task added
}

func (x *C2S_GetJobTypeReqT) Reset() {
	*x = C2S_GetJobTypeReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_GetJobTypeReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_GetJobTypeReqT) ProtoMessage() {}

func (x *C2S_GetJobTypeReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_GetJobTypeReqT.ProtoReflect.Descriptor instead.
func (*C2S_GetJobTypeReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{31}
}

func (x *C2S_GetJobTypeReqT) GetJobTypeId() string {
	if x != nil {
		return x.JobTypeId
	}
	return ""
}

type C2S_GetJobTypeRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobType    *JobType `protobuf:"bytes,10,opt,name=JobType,proto3" json:"JobType,omitempty"`
	StatusCode string   `protobuf:"bytes,20,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string   `protobuf:"bytes,30,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *C2S_GetJobTypeRpnT) Reset() {
	*x = C2S_GetJobTypeRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_GetJobTypeRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_GetJobTypeRpnT) ProtoMessage() {}

func (x *C2S_GetJobTypeRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_GetJobTypeRpnT.ProtoReflect.Descriptor instead.
func (*C2S_GetJobTypeRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{32}
}

func (x *C2S_GetJobTypeRpnT) GetJobType() *JobType {
	if x != nil {
		return x.JobType
	}
	return nil
}

func (x *C2S_GetJobTypeRpnT) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *C2S_GetJobTypeRpnT) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Response Parameters for Adding a Job Type
type S2C_AddJobTypeRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobTypeId  string `protobuf:"bytes,10,opt,name=JobTypeId,proto3" json:"JobTypeId,omitempty"`   // ID of the task added
	StatusCode string `protobuf:"bytes,20,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"` // Code denoting the service execution
	Message    string `protobuf:"bytes,30,opt,name=Message,proto3" json:"Message,omitempty"`       // Message from the service after execution
}

func (x *S2C_AddJobTypeRpnT) Reset() {
	*x = S2C_AddJobTypeRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_AddJobTypeRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_AddJobTypeRpnT) ProtoMessage() {}

func (x *S2C_AddJobTypeRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_AddJobTypeRpnT.ProtoReflect.Descriptor instead.
func (*S2C_AddJobTypeRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{33}
}

func (x *S2C_AddJobTypeRpnT) GetJobTypeId() string {
	if x != nil {
		return x.JobTypeId
	}
	return ""
}

func (x *S2C_AddJobTypeRpnT) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *S2C_AddJobTypeRpnT) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request Parameters for Removing a Job Type
type C2S_RemoveJobTypeReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobTypeId string `protobuf:"bytes,10,opt,name=JobTypeId,proto3" json:"JobTypeId,omitempty"` // ID of the job to be removed
}

func (x *C2S_RemoveJobTypeReqT) Reset() {
	*x = C2S_RemoveJobTypeReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_RemoveJobTypeReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_RemoveJobTypeReqT) ProtoMessage() {}

func (x *C2S_RemoveJobTypeReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_RemoveJobTypeReqT.ProtoReflect.Descriptor instead.
func (*C2S_RemoveJobTypeReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{34}
}

func (x *C2S_RemoveJobTypeReqT) GetJobTypeId() string {
	if x != nil {
		return x.JobTypeId
	}
	return ""
}

// Response Parameters for Removing a Job Type
type S2C_RemoveJobTypeRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode string `protobuf:"bytes,10,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"` // Code denoting the service execution
	Message    string `protobuf:"bytes,20,opt,name=Message,proto3" json:"Message,omitempty"`       // Message from the service after execution
}

func (x *S2C_RemoveJobTypeRpnT) Reset() {
	*x = S2C_RemoveJobTypeRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_RemoveJobTypeRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_RemoveJobTypeRpnT) ProtoMessage() {}

func (x *S2C_RemoveJobTypeRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_RemoveJobTypeRpnT.ProtoReflect.Descriptor instead.
func (*S2C_RemoveJobTypeRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{35}
}

func (x *S2C_RemoveJobTypeRpnT) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *S2C_RemoveJobTypeRpnT) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request Parameters for Setting/Updating a Job Type
type C2S_SetJobTypeReqT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobTypeId       string   `protobuf:"bytes,10,opt,name=JobTypeId,proto3" json:"JobTypeId,omitempty"`             // ID of the task to be updated
	Image           string   `protobuf:"bytes,20,opt,name=Image,proto3" json:"Image,omitempty"`                     // Docker image URL for POD, system image for ECS
	ReScript        string   `protobuf:"bytes,30,opt,name=ReScript,proto3" json:"ReScript,omitempty"`               // Used to estimate the resources consumed by the task
	ScScript        string   `protobuf:"bytes,40,opt,name=ScScript,proto3" json:"ScScript,omitempty"`               // Used to collect task status and progress from the output of the command line
	JeScript        string   `protobuf:"bytes,50,opt,name=JeScript,proto3" json:"JeScript,omitempty"`               // Task entry command
	FixedParameters []string `protobuf:"bytes,60,rep,name=FixedParameters,proto3" json:"FixedParameters,omitempty"` // Relevant parameters for the task
}

func (x *C2S_SetJobTypeReqT) Reset() {
	*x = C2S_SetJobTypeReqT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_SetJobTypeReqT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_SetJobTypeReqT) ProtoMessage() {}

func (x *C2S_SetJobTypeReqT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_SetJobTypeReqT.ProtoReflect.Descriptor instead.
func (*C2S_SetJobTypeReqT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{36}
}

func (x *C2S_SetJobTypeReqT) GetJobTypeId() string {
	if x != nil {
		return x.JobTypeId
	}
	return ""
}

func (x *C2S_SetJobTypeReqT) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *C2S_SetJobTypeReqT) GetReScript() string {
	if x != nil {
		return x.ReScript
	}
	return ""
}

func (x *C2S_SetJobTypeReqT) GetScScript() string {
	if x != nil {
		return x.ScScript
	}
	return ""
}

func (x *C2S_SetJobTypeReqT) GetJeScript() string {
	if x != nil {
		return x.JeScript
	}
	return ""
}

func (x *C2S_SetJobTypeReqT) GetFixedParameters() []string {
	if x != nil {
		return x.FixedParameters
	}
	return nil
}

// Response Parameters for Setting/Updating a Job Type
type S2C_SetJobTypeRpnT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobTypeId  string `protobuf:"bytes,10,opt,name=JobTypeId,proto3" json:"JobTypeId,omitempty"`   // Relevant task ID that is updated
	StatusCode string `protobuf:"bytes,20,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"` // Code denoting the service execution
	Message    string `protobuf:"bytes,30,opt,name=Message,proto3" json:"Message,omitempty"`       // Message from the service after execution
}

func (x *S2C_SetJobTypeRpnT) Reset() {
	*x = S2C_SetJobTypeRpnT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_SetJobTypeRpnT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_SetJobTypeRpnT) ProtoMessage() {}

func (x *S2C_SetJobTypeRpnT) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_SetJobTypeRpnT.ProtoReflect.Descriptor instead.
func (*S2C_SetJobTypeRpnT) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{37}
}

func (x *S2C_SetJobTypeRpnT) GetJobTypeId() string {
	if x != nil {
		return x.JobTypeId
	}
	return ""
}

func (x *S2C_SetJobTypeRpnT) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *S2C_SetJobTypeRpnT) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type C2S_CreateJobReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobType      int32  `protobuf:"varint,10,opt,name=jobType,proto3" json:"jobType,omitempty"`          // Type of service
	StorageToken string `protobuf:"bytes,20,opt,name=storageToken,proto3" json:"storageToken,omitempty"` // download and upload token
	Parameters   string `protobuf:"bytes,30,opt,name=parameters,proto3" json:"parameters,omitempty"`     // Job parameters
}

func (x *C2S_CreateJobReq) Reset() {
	*x = C2S_CreateJobReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_CreateJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_CreateJobReq) ProtoMessage() {}

func (x *C2S_CreateJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_CreateJobReq.ProtoReflect.Descriptor instead.
func (*C2S_CreateJobReq) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{38}
}

func (x *C2S_CreateJobReq) GetJobType() int32 {
	if x != nil {
		return x.JobType
	}
	return 0
}

func (x *C2S_CreateJobReq) GetStorageToken() string {
	if x != nil {
		return x.StorageToken
	}
	return ""
}

func (x *C2S_CreateJobReq) GetParameters() string {
	if x != nil {
		return x.Parameters
	}
	return ""
}

// Response Paramter
type S2C_CreateJobRpn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32  `protobuf:"varint,10,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"` // Code denoting the service exectuion
	Message    string `protobuf:"bytes,20,opt,name=Message,proto3" json:"Message,omitempty"`        // Message from the service after execution
	JobID      string `protobuf:"bytes,30,opt,name=JobID,proto3" json:"JobID,omitempty"`            // ID of the Task added
}

func (x *S2C_CreateJobRpn) Reset() {
	*x = S2C_CreateJobRpn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_CreateJobRpn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_CreateJobRpn) ProtoMessage() {}

func (x *S2C_CreateJobRpn) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_CreateJobRpn.ProtoReflect.Descriptor instead.
func (*S2C_CreateJobRpn) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{39}
}

func (x *S2C_CreateJobRpn) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *S2C_CreateJobRpn) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *S2C_CreateJobRpn) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

// Get Task Information Request
type C2S_GetJobInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,10,opt,name=jobId,proto3" json:"jobId,omitempty"` // Identifier of the task (required)
}

func (x *C2S_GetJobInfoReq) Reset() {
	*x = C2S_GetJobInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_GetJobInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_GetJobInfoReq) ProtoMessage() {}

func (x *C2S_GetJobInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_GetJobInfoReq.ProtoReflect.Descriptor instead.
func (*C2S_GetJobInfoReq) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{40}
}

func (x *C2S_GetJobInfoReq) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

// Get Task Information Response
type S2C_GetJobInfoRpn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32    `protobuf:"varint,10,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"` // Code denoting the service exectuion
	Message    string   `protobuf:"bytes,20,opt,name=Message,proto3" json:"Message,omitempty"`        // Message from the service after execution
	Data       *JobInfo `protobuf:"bytes,30,opt,name=data,proto3" json:"data,omitempty"`              // Detailed task information
}

func (x *S2C_GetJobInfoRpn) Reset() {
	*x = S2C_GetJobInfoRpn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_GetJobInfoRpn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_GetJobInfoRpn) ProtoMessage() {}

func (x *S2C_GetJobInfoRpn) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_GetJobInfoRpn.ProtoReflect.Descriptor instead.
func (*S2C_GetJobInfoRpn) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{41}
}

func (x *S2C_GetJobInfoRpn) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *S2C_GetJobInfoRpn) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *S2C_GetJobInfoRpn) GetData() *JobInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// Cancel Job Request
type C2S_CancelJobReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,10,opt,name=jobId,proto3" json:"jobId,omitempty"` // Identifier of the task (required)
}

func (x *C2S_CancelJobReq) Reset() {
	*x = C2S_CancelJobReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_CancelJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_CancelJobReq) ProtoMessage() {}

func (x *C2S_CancelJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_CancelJobReq.ProtoReflect.Descriptor instead.
func (*C2S_CancelJobReq) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{42}
}

func (x *C2S_CancelJobReq) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

// Cancel Job Response
type S2C_CancelJobRpn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32  `protobuf:"varint,10,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"` // Code denoting the service exectuion
	Message    string `protobuf:"bytes,20,opt,name=Message,proto3" json:"Message,omitempty"`        // Message from the service after execution
}

func (x *S2C_CancelJobRpn) Reset() {
	*x = S2C_CancelJobRpn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_CancelJobRpn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_CancelJobRpn) ProtoMessage() {}

func (x *S2C_CancelJobRpn) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_CancelJobRpn.ProtoReflect.Descriptor instead.
func (*S2C_CancelJobRpn) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{43}
}

func (x *S2C_CancelJobRpn) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *S2C_CancelJobRpn) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type JobInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId     string `protobuf:"bytes,10,opt,name=jobId,proto3" json:"jobId,omitempty"`         // Identifier of the task
	JobType   string `protobuf:"bytes,20,opt,name=jobType,proto3" json:"jobType,omitempty"`     // Type of the task
	Status    string `protobuf:"bytes,30,opt,name=status,proto3" json:"status,omitempty"`       // Status of the task
	Progress  int32  `protobuf:"varint,40,opt,name=progress,proto3" json:"progress,omitempty"`  // Progress of the task
	Message   string `protobuf:"bytes,50,opt,name=message,proto3" json:"message,omitempty"`     // Message from the task
	CreatedAt string `protobuf:"bytes,60,opt,name=createdAt,proto3" json:"createdAt,omitempty"` // Time when the task was created
	UpdatedAt string `protobuf:"bytes,70,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` // Time when the task was last updated
}

func (x *JobInfo) Reset() {
	*x = JobInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TransformService2_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInfo) ProtoMessage() {}

func (x *JobInfo) ProtoReflect() protoreflect.Message {
	mi := &file_TransformService2_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInfo.ProtoReflect.Descriptor instead.
func (*JobInfo) Descriptor() ([]byte, []int) {
	return file_TransformService2_proto_rawDescGZIP(), []int{44}
}

func (x *JobInfo) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobInfo) GetJobType() string {
	if x != nil {
		return x.JobType
	}
	return ""
}

func (x *JobInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *JobInfo) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *JobInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JobInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *JobInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

var File_TransformService2_proto protoreflect.FileDescriptor

var file_TransformService2_proto_rawDesc = []byte{
	0x0a, 0x17, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x18, 0x43, 0x32,
	0x53, 0x5f, 0x53, 0x65, 0x74, 0x54, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x73,
	0x63, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x49, 0x64, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x41, 0x73, 0x63, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x18, 0x43, 0x32,
	0x53, 0x5f, 0x53, 0x65, 0x74, 0x54, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf3, 0x01, 0x0a,
	0x07, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x53, 0x63, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x4a, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4a, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x3c, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0f, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x22, 0x6f, 0x0a, 0x15, 0x43, 0x32, 0x53, 0x5f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4a,
	0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x4a,
	0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x32, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x4a, 0x6f, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x22, 0x93, 0x03, 0x0a, 0x15, 0x43, 0x32, 0x53, 0x5f, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a,
	0x0e, 0x52, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x63, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53,
	0x63, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a,
	0x0e, 0x4a, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4a, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x15, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x46,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6b, 0x69, 0x70, 0x18, 0x50, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x9c, 0x02, 0x0a, 0x14, 0x43, 0x32,
	0x53, 0x5f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x5f, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x49, 0x64, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4a, 0x6f, 0x62, 0x53,
	0x65, 0x74, 0x49, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x4a, 0x6f,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b,
	0x69, 0x70, 0x18, 0x50, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5f, 0x0a, 0x14, 0x43, 0x32, 0x53, 0x5f,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x52, 0x70, 0x6e, 0x5f, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x73, 0x65, 0x74, 0x73, 0x18,
	0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74,
	0x52, 0x07, 0x4a, 0x6f, 0x62, 0x73, 0x65, 0x74, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x06, 0x4a, 0x6f,
	0x62, 0x53, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x22, 0x32, 0x0a, 0x12, 0x43, 0x32, 0x53, 0x5f, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x12, 0x43, 0x32, 0x53, 0x5f, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x31, 0x0a, 0x06, 0x4a, 0x6f, 0x62, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x32, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x52, 0x06, 0x4a, 0x6f, 0x62,
	0x73, 0x65, 0x74, 0x22, 0x4d, 0x0a, 0x1d, 0x43, 0x32, 0x53, 0x5f, 0x53, 0x65, 0x74, 0x4a, 0x6f,
	0x62, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x5f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x4d, 0x0a, 0x1d, 0x43, 0x32, 0x53, 0x5f, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x70,
	0x6e, 0x5f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x86, 0x01, 0x0a, 0x12, 0x43, 0x32, 0x53, 0x5f, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x28, 0x0a, 0x0f, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x12, 0x43,
	0x32, 0x53, 0x5f, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x5f,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22,
	0x33, 0x0a, 0x15, 0x43, 0x32, 0x53, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x62,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x53,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4a, 0x6f, 0x62, 0x53,
	0x65, 0x74, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x15, 0x43, 0x32, 0x53, 0x5f, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5e, 0x0a, 0x12, 0x43,
	0x32, 0x53, 0x5f, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x52, 0x70, 0x6e, 0x5f,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5e, 0x0a, 0x12, 0x43,
	0x32, 0x53, 0x5f, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x52, 0x70, 0x6e, 0x5f,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x60, 0x0a, 0x18, 0x43,
	0x32, 0x53, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9c, 0x01,
	0x0a, 0x18, 0x43, 0x32, 0x53, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x50, 0x6f,
	0x6f, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x50, 0x6f, 0x6f, 0x6c, 0x12,
	0x1d, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x8a, 0x03, 0x0a,
	0x1a, 0x43, 0x32, 0x53, 0x5f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x28, 0x0a, 0x0f, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x61, 0x6d,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e,
	0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x73, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x49, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x34, 0x0a, 0x15, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x15, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x53, 0x63, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x12, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6b, 0x69, 0x70, 0x18, 0x50, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x1a, 0x43, 0x32,
	0x53, 0x5f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x6f, 0x6f, 0x6c, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x45, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c,
	0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x43, 0x6f, 0x64, 0x65,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf8, 0x03, 0x0a,
	0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x26, 0x0a,
	0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x53, 0x63,
	0x61, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x69, 0x78, 0x65, 0x64, 0x18, 0x50, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x12,
	0x5b, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x73, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x1a, 0x69, 0x0a, 0x13,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x57, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1c,
	0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0xe2, 0x02, 0x0a, 0x18, 0x43, 0x32, 0x53, 0x5f, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x53,
	0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x63, 0x61,
	0x6c, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65,
	0x74, 0x18, 0x46, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x12, 0x4c, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x50, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x4f, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x18, 0x43, 0x32, 0x53, 0x5f, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x70, 0x6e,
	0x5f, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f,
	0x6f, 0x6c, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61,
	0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e,
	0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x35, 0x0a, 0x1b, 0x43, 0x32, 0x53, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x5f,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x1b, 0x43, 0x32, 0x53,
	0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x6f, 0x6f, 0x6c, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x8a, 0x03, 0x0a, 0x18, 0x43, 0x32, 0x53, 0x5f, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x49,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x69, 0x78, 0x65, 0x64, 0x18, 0x46, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65,
	0x74, 0x12, 0x4c, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x5a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x66, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x7c, 0x0a, 0x18, 0x43, 0x32, 0x53, 0x5f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe1, 0x01,
	0x0a, 0x13, 0x43, 0x32, 0x53, 0x5f, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x5f, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x63, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x53, 0x63, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4a,
	0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4a,
	0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x3c, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0f, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x22, 0x33, 0x0a, 0x13, 0x43, 0x32, 0x53, 0x5f, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x43, 0x32, 0x53, 0x5f, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x34,
	0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x32, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x4a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6d,
	0x0a, 0x13, 0x53, 0x32, 0x43, 0x5f, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x36, 0x0a,
	0x16, 0x43, 0x32, 0x53, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4a, 0x6f, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x16, 0x53, 0x32, 0x43, 0x5f, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x13, 0x43, 0x32,
	0x53, 0x5f, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x5f,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x63, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x4a, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4a, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x3c, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x22, 0x6d, 0x0a, 0x13, 0x53, 0x32, 0x43, 0x5f, 0x53, 0x65, 0x74, 0x4a, 0x6f,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x6f,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4a,
	0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x70, 0x0a, 0x10, 0x43, 0x32, 0x53, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x22, 0x62, 0x0a, 0x10, 0x53, 0x32, 0x43, 0x5f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x70, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x22, 0x29, 0x0a, 0x11, 0x43, 0x32, 0x53, 0x5f,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x11, 0x53, 0x32, 0x43, 0x5f, 0x47, 0x65, 0x74, 0x4a, 0x6f,
	0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x70, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x32, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x28, 0x0a, 0x10, 0x43, 0x32, 0x53, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x10,
	0x53, 0x32, 0x43, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x70, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x07, 0x4a,
	0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a,
	0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x32, 0x99, 0x02, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x56, 0x32,
	0x12, 0x55, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x23, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x71, 0x1a, 0x23, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x53, 0x32, 0x43, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4a, 0x6f, 0x62, 0x52, 0x70, 0x6e, 0x12, 0x5a, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4a, 0x6f,
	0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e,
	0x53, 0x32, 0x43, 0x5f, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x70,
	0x6e, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62,
	0x12, 0x23, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x53, 0x32, 0x43, 0x5f, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x70, 0x6e, 0x22, 0x00, 0x32, 0xf3, 0x01, 0x0a,
	0x10, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x6b, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x53, 0x65, 0x74,
	0x54, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x5f,
	0x74, 0x1a, 0x2b, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x53, 0x65, 0x74, 0x54, 0x61, 0x6e,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x72,
	0x0a, 0x16, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53,
	0x5f, 0x53, 0x65, 0x74, 0x54, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a, 0x2b, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x53, 0x65,
	0x74, 0x54, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x70, 0x6e,
	0x5f, 0x74, 0x32, 0xc6, 0x08, 0x0a, 0x0d, 0x4a, 0x6f, 0x62, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x26, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x41, 0x64, 0x64, 0x4a, 0x6f,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a, 0x26, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x53,
	0x32, 0x43, 0x5f, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x70, 0x6e,
	0x5f, 0x74, 0x12, 0x65, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x29, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a, 0x29,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x32, 0x2e, 0x53, 0x32, 0x43, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x5c, 0x0a, 0x0a, 0x53, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f,
	0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a,
	0x26, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x32, 0x2e, 0x53, 0x32, 0x43, 0x5f, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x5c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4a, 0x6f,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a, 0x26, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x62, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4a, 0x6f,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a,
	0x28, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x59, 0x0a, 0x09, 0x41, 0x64, 0x64,
	0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x12, 0x25, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x41,
	0x64, 0x64, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a, 0x25, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x41, 0x64, 0x64, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x52,
	0x70, 0x6e, 0x5f, 0x74, 0x12, 0x62, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4a, 0x6f,
	0x62, 0x53, 0x65, 0x74, 0x12, 0x28, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a, 0x28,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x62,
	0x53, 0x65, 0x74, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x59, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x53, 0x65, 0x74, 0x12, 0x25, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x53, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a, 0x25, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32,
	0x2e, 0x43, 0x32, 0x53, 0x5f, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x52, 0x70,
	0x6e, 0x5f, 0x74, 0x12, 0x59, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74,
	0x12, 0x25, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a, 0x25, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x5f,
	0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x12, 0x27, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4a, 0x6f, 0x62, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a, 0x27, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x74, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12,
	0x7a, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f,
	0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a, 0x30, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32,
	0x53, 0x5f, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x32, 0xc8, 0x04, 0x0a, 0x16,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x6b, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x2b, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32,
	0x53, 0x5f, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a, 0x2b, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x70,
	0x6e, 0x5f, 0x74, 0x12, 0x74, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x2e, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32,
	0x53, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a, 0x2e, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32,
	0x53, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x6b, 0x0a, 0x0f, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x2b, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32,
	0x2e, 0x43, 0x32, 0x53, 0x5f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a, 0x2b, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32,
	0x53, 0x5f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x12, 0x6b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x2b, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32,
	0x53, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a, 0x2b, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x70,
	0x6e, 0x5f, 0x74, 0x12, 0x71, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x2d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53,
	0x5f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x5f, 0x74, 0x1a, 0x2d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x2e, 0x43, 0x32, 0x53, 0x5f,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x70, 0x6e, 0x5f, 0x74, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_TransformService2_proto_rawDescOnce sync.Once
	file_TransformService2_proto_rawDescData = file_TransformService2_proto_rawDesc
)

func file_TransformService2_proto_rawDescGZIP() []byte {
	file_TransformService2_proto_rawDescOnce.Do(func() {
		file_TransformService2_proto_rawDescData = protoimpl.X.CompressGZIP(file_TransformService2_proto_rawDescData)
	})
	return file_TransformService2_proto_rawDescData
}

var file_TransformService2_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_TransformService2_proto_goTypes = []interface{}{
	(*C2S_SetTanentConfigReqT)(nil),      // 0: TransformService2.C2S_SetTanentConfigReq_t
	(*C2S_SetTanentConfigRpnT)(nil),      // 1: TransformService2.C2S_SetTanentConfigRpn_t
	(*JobType)(nil),                      // 2: TransformService2.JobType
	(*C2S_QueryJobTypeRpnT)(nil),         // 3: TransformService2.C2S_QueryJobTypeRpn_t
	(*C2S_QueryJobTypeReqT)(nil),         // 4: TransformService2.C2S_QueryJobTypeReq_t
	(*C2S_QueryJobSetReqT)(nil),          // 5: TransformService2.C2S_QueryJobSetReq_t
	(*C2S_QueryJobSetRpnT)(nil),          // 6: TransformService2.C2S_QueryJobSetRpn_t
	(*JobSet)(nil),                       // 7: TransformService2.JobSet
	(*C2S_GetJobSetReqT)(nil),            // 8: TransformService2.C2S_GetJobSetReq_t
	(*C2S_GetJobSetRpnT)(nil),            // 9: TransformService2.C2S_GetJobSetRpn_t
	(*C2S_SetJobFixedArgumentsReqT)(nil), // 10: TransformService2.C2S_SetJobFixedArgumentsReq_t
	(*C2S_SetJobFixedArgumentsRpnT)(nil), // 11: TransformService2.C2S_SetJobFixedArgumentsRpn_t
	(*C2S_AddJobSetReqT)(nil),            // 12: TransformService2.C2S_AddJobSetReq_t
	(*C2S_SetJobSetReqT)(nil),            // 13: TransformService2.C2S_SetJobSetReq_t
	(*C2S_RemoveJobSetReqT)(nil),         // 14: TransformService2.C2S_RemoveJobSetReq_t
	(*C2S_RemoveJobSetRpnT)(nil),         // 15: TransformService2.C2S_RemoveJobSetRpn_t
	(*C2S_SetJobSetRpnT)(nil),            // 16: TransformService2.C2S_SetJobSetRpn_t
	(*C2S_AddJobSetRpnT)(nil),            // 17: TransformService2.C2S_AddJobSetRpn_t
	(*C2S_GetResourcePoolReqT)(nil),      // 18: TransformService2.C2S_GetResourcePoolReq_t
	(*C2S_GetResourcePoolRpnT)(nil),      // 19: TransformService2.C2S_GetResourcePoolRpn_t
	(*C2S_QueryResourcePoolReqT)(nil),    // 20: TransformService2.C2S_QueryResourcePoolReq_t
	(*C2S_QueryResourcePoolRpnT)(nil),    // 21: TransformService2.C2S_QueryResourcePoolRpn_t
	(*ResourcePool)(nil),                 // 22: TransformService2.ResourcePool
	(*ResourceLimitOfTask)(nil),          // 23: TransformService2.ResourceLimitOfTask
	(*C2S_AddResourcePoolReqT)(nil),      // 24: TransformService2.C2S_AddResourcePoolReq_t
	(*C2S_AddResourcePoolRpnT)(nil),      // 25: TransformService2.C2S_AddResourcePoolRpn_t
	(*C2S_RemoveResourcePoolReqT)(nil),   // 26: TransformService2.C2S_RemoveResourcePoolReq_t
	(*C2S_RemoveResourcePoolRpnT)(nil),   // 27: TransformService2.C2S_RemoveResourcePoolRpn_t
	(*C2S_SetResourcePoolReqT)(nil),      // 28: TransformService2.C2S_SetResourcePoolReq_t
	(*C2S_SetResourcePoolRpnT)(nil),      // 29: TransformService2.C2S_SetResourcePoolRpn_t
	(*C2S_AddJobTypeReqT)(nil),           // 30: TransformService2.C2S_AddJobTypeReq_t
	(*C2S_GetJobTypeReqT)(nil),           // 31: TransformService2.C2S_GetJobTypeReq_t
	(*C2S_GetJobTypeRpnT)(nil),           // 32: TransformService2.C2S_GetJobTypeRpn_t
	(*S2C_AddJobTypeRpnT)(nil),           // 33: TransformService2.S2C_AddJobTypeRpn_t
	(*C2S_RemoveJobTypeReqT)(nil),        // 34: TransformService2.C2S_RemoveJobTypeReq_t
	(*S2C_RemoveJobTypeRpnT)(nil),        // 35: TransformService2.S2C_RemoveJobTypeRpn_t
	(*C2S_SetJobTypeReqT)(nil),           // 36: TransformService2.C2S_SetJobTypeReq_t
	(*S2C_SetJobTypeRpnT)(nil),           // 37: TransformService2.S2C_SetJobTypeRpn_t
	(*C2S_CreateJobReq)(nil),             // 38: TransformService2.C2S_CreateJobReq
	(*S2C_CreateJobRpn)(nil),             // 39: TransformService2.S2C_CreateJobRpn
	(*C2S_GetJobInfoReq)(nil),            // 40: TransformService2.C2S_GetJobInfoReq
	(*S2C_GetJobInfoRpn)(nil),            // 41: TransformService2.S2C_GetJobInfoRpn
	(*C2S_CancelJobReq)(nil),             // 42: TransformService2.C2S_CancelJobReq
	(*S2C_CancelJobRpn)(nil),             // 43: TransformService2.S2C_CancelJobRpn
	(*JobInfo)(nil),                      // 44: TransformService2.JobInfo
	nil,                                  // 45: TransformService2.ResourcePool.ResourceLimitsEntry
}
var file_TransformService2_proto_depIdxs = []int32{
	2,  // 0: TransformService2.C2S_QueryJobTypeRpn_t.JobTypes:type_name -> TransformService2.JobType
	7,  // 1: TransformService2.C2S_QueryJobSetRpn_t.Jobsets:type_name -> TransformService2.JobSet
	7,  // 2: TransformService2.C2S_GetJobSetRpn_t.Jobset:type_name -> TransformService2.JobSet
	22, // 3: TransformService2.C2S_GetResourcePoolRpn_t.Pool:type_name -> TransformService2.ResourcePool
	22, // 4: TransformService2.C2S_QueryResourcePoolRpn_t.ResourcePools:type_name -> TransformService2.ResourcePool
	45, // 5: TransformService2.ResourcePool.ResourceLimits:type_name -> TransformService2.ResourcePool.ResourceLimitsEntry
	23, // 6: TransformService2.C2S_AddResourcePoolReq_t.ResourceLimit:type_name -> TransformService2.ResourceLimitOfTask
	23, // 7: TransformService2.C2S_SetResourcePoolReq_t.ResourceLimit:type_name -> TransformService2.ResourceLimitOfTask
	2,  // 8: TransformService2.C2S_GetJobTypeRpn_t.JobType:type_name -> TransformService2.JobType
	44, // 9: TransformService2.S2C_GetJobInfoRpn.data:type_name -> TransformService2.JobInfo
	23, // 10: TransformService2.ResourcePool.ResourceLimitsEntry.value:type_name -> TransformService2.ResourceLimitOfTask
	38, // 11: TransformService2.TransformV2.CreateJob:input_type -> TransformService2.C2S_CreateJobReq
	40, // 12: TransformService2.TransformV2.GetJobInfo:input_type -> TransformService2.C2S_GetJobInfoReq
	42, // 13: TransformService2.TransformV2.CancelJob:input_type -> TransformService2.C2S_CancelJobReq
	0,  // 14: TransformService2.TenantManagement.SetTenantConfig:input_type -> TransformService2.C2S_SetTanentConfigReq_t
	0,  // 15: TransformService2.TenantManagement.SetDefaultTenantConfig:input_type -> TransformService2.C2S_SetTanentConfigReq_t
	30, // 16: TransformService2.JobManagement.AddJobType:input_type -> TransformService2.C2S_AddJobTypeReq_t
	34, // 17: TransformService2.JobManagement.RemoveJobType:input_type -> TransformService2.C2S_RemoveJobTypeReq_t
	36, // 18: TransformService2.JobManagement.SetJobType:input_type -> TransformService2.C2S_SetJobTypeReq_t
	31, // 19: TransformService2.JobManagement.GetJobType:input_type -> TransformService2.C2S_GetJobTypeReq_t
	4,  // 20: TransformService2.JobManagement.QueryJobType:input_type -> TransformService2.C2S_QueryJobTypeReq_t
	12, // 21: TransformService2.JobManagement.AddJobSet:input_type -> TransformService2.C2S_AddJobSetReq_t
	14, // 22: TransformService2.JobManagement.RemoveJobSet:input_type -> TransformService2.C2S_RemoveJobSetReq_t
	13, // 23: TransformService2.JobManagement.SetJobSet:input_type -> TransformService2.C2S_SetJobSetReq_t
	8,  // 24: TransformService2.JobManagement.GetJobSet:input_type -> TransformService2.C2S_GetJobSetReq_t
	5,  // 25: TransformService2.JobManagement.QueryJobSet:input_type -> TransformService2.C2S_QueryJobSetReq_t
	10, // 26: TransformService2.JobManagement.SetJobFixedArguments:input_type -> TransformService2.C2S_SetJobFixedArgumentsReq_t
	24, // 27: TransformService2.ResourcePoolManagement.AddResourcePool:input_type -> TransformService2.C2S_AddResourcePoolReq_t
	26, // 28: TransformService2.ResourcePoolManagement.RemoveResourcePool:input_type -> TransformService2.C2S_RemoveResourcePoolReq_t
	28, // 29: TransformService2.ResourcePoolManagement.SetResourcePool:input_type -> TransformService2.C2S_SetResourcePoolReq_t
	18, // 30: TransformService2.ResourcePoolManagement.GetResourcePool:input_type -> TransformService2.C2S_GetResourcePoolReq_t
	20, // 31: TransformService2.ResourcePoolManagement.QueryResourcePool:input_type -> TransformService2.C2S_QueryResourcePoolReq_t
	39, // 32: TransformService2.TransformV2.CreateJob:output_type -> TransformService2.S2C_CreateJobRpn
	41, // 33: TransformService2.TransformV2.GetJobInfo:output_type -> TransformService2.S2C_GetJobInfoRpn
	43, // 34: TransformService2.TransformV2.CancelJob:output_type -> TransformService2.S2C_CancelJobRpn
	1,  // 35: TransformService2.TenantManagement.SetTenantConfig:output_type -> TransformService2.C2S_SetTanentConfigRpn_t
	1,  // 36: TransformService2.TenantManagement.SetDefaultTenantConfig:output_type -> TransformService2.C2S_SetTanentConfigRpn_t
	33, // 37: TransformService2.JobManagement.AddJobType:output_type -> TransformService2.S2C_AddJobTypeRpn_t
	35, // 38: TransformService2.JobManagement.RemoveJobType:output_type -> TransformService2.S2C_RemoveJobTypeRpn_t
	37, // 39: TransformService2.JobManagement.SetJobType:output_type -> TransformService2.S2C_SetJobTypeRpn_t
	32, // 40: TransformService2.JobManagement.GetJobType:output_type -> TransformService2.C2S_GetJobTypeRpn_t
	3,  // 41: TransformService2.JobManagement.QueryJobType:output_type -> TransformService2.C2S_QueryJobTypeRpn_t
	17, // 42: TransformService2.JobManagement.AddJobSet:output_type -> TransformService2.C2S_AddJobSetRpn_t
	15, // 43: TransformService2.JobManagement.RemoveJobSet:output_type -> TransformService2.C2S_RemoveJobSetRpn_t
	16, // 44: TransformService2.JobManagement.SetJobSet:output_type -> TransformService2.C2S_SetJobSetRpn_t
	9,  // 45: TransformService2.JobManagement.GetJobSet:output_type -> TransformService2.C2S_GetJobSetRpn_t
	6,  // 46: TransformService2.JobManagement.QueryJobSet:output_type -> TransformService2.C2S_QueryJobSetRpn_t
	11, // 47: TransformService2.JobManagement.SetJobFixedArguments:output_type -> TransformService2.C2S_SetJobFixedArgumentsRpn_t
	25, // 48: TransformService2.ResourcePoolManagement.AddResourcePool:output_type -> TransformService2.C2S_AddResourcePoolRpn_t
	27, // 49: TransformService2.ResourcePoolManagement.RemoveResourcePool:output_type -> TransformService2.C2S_RemoveResourcePoolRpn_t
	29, // 50: TransformService2.ResourcePoolManagement.SetResourcePool:output_type -> TransformService2.C2S_SetResourcePoolRpn_t
	19, // 51: TransformService2.ResourcePoolManagement.GetResourcePool:output_type -> TransformService2.C2S_GetResourcePoolRpn_t
	21, // 52: TransformService2.ResourcePoolManagement.QueryResourcePool:output_type -> TransformService2.C2S_QueryResourcePoolRpn_t
	32, // [32:53] is the sub-list for method output_type
	11, // [11:32] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_TransformService2_proto_init() }
func file_TransformService2_proto_init() {
	if File_TransformService2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_TransformService2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_SetTanentConfigReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_SetTanentConfigRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_QueryJobTypeRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_QueryJobTypeReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_QueryJobSetReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_QueryJobSetRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_GetJobSetReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_GetJobSetRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_SetJobFixedArgumentsReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_SetJobFixedArgumentsRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_AddJobSetReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_SetJobSetReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_RemoveJobSetReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_RemoveJobSetRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_SetJobSetRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_AddJobSetRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_GetResourcePoolReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_GetResourcePoolRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_QueryResourcePoolReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_QueryResourcePoolRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcePool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceLimitOfTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_AddResourcePoolReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_AddResourcePoolRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_RemoveResourcePoolReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_RemoveResourcePoolRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_SetResourcePoolReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_SetResourcePoolRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_AddJobTypeReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_GetJobTypeReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_GetJobTypeRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_AddJobTypeRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_RemoveJobTypeReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_RemoveJobTypeRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_SetJobTypeReqT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_SetJobTypeRpnT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_CreateJobReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_CreateJobRpn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_GetJobInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_GetJobInfoRpn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_CancelJobReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_CancelJobRpn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TransformService2_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_TransformService2_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_TransformService2_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_TransformService2_proto_msgTypes[21].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_TransformService2_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_TransformService2_proto_goTypes,
		DependencyIndexes: file_TransformService2_proto_depIdxs,
		MessageInfos:      file_TransformService2_proto_msgTypes,
	}.Build()
	File_TransformService2_proto = out.File
	file_TransformService2_proto_rawDesc = nil
	file_TransformService2_proto_goTypes = nil
	file_TransformService2_proto_depIdxs = nil
}
